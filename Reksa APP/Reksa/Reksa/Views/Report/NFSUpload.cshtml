@using Kendo.Mvc.UI
@model Reksa.ViewModels.ReportListViewModel

@{
    ViewData["Title"] = "NFS Upload";
}


<!-- Begin Contents -->
<div class="panel panel-default" id="contentCustomer">
    <div class="panel-heading">
        <h4 class="m-t-0 header-title">
            <a data-toggle="collapse" data-parent="#accordion" href="#collapse2" aria-expanded="true">NFS Upload</a>
        </h4>
    </div>
    <div id="collapse2" class="panel-collapse collapse in" aria-expanded="true">
        <div class="panel-body">
            <div class="col-md-6">
                <!-- Begin DropDown File Action -->
                <div class="form-group">
                    <label class="col-sm-3 control-label">File Action</label>
                    <div class="input-group">
                        @(Html.Kendo().DropDownList().Name("cmbFileAction").BindTo(new List<SelectListItem>() { new SelectListItem() {
                        Text = "UPLOAD", Value = "1" }, new SelectListItem() { Text = "DOWNLOAD",Value = "0"}}).DataTextField("Text").DataValueField("Value").Value("0")
                        .Events(e => { e.Change("onChangeFileAction").DataBound("onBoundFileAction");})
                        )
                    </div>
                </div>
                <!-- End DropDown File Action -->
                <!-- Begin DropDown File Type -->
                <div class="form-group">
                    <label class="col-sm-3 control-label">File Type</label>
                    <div class="input-group">
                        @(Html.Kendo().DropDownList().Name("cmbFileType").HtmlAttributes(new { @id = "cmbFileType", @style = "width: 400px;" })
                        .Events(e => { e.Change("onChangeFileType").DataBound("onBoundFileType"); })
                        )
                    </div>
                </div>
                <!-- End DropDown File Type -->
                <!-- Begin Input File Name -->
                <div class="form-group">
                    <label id ="labelFileName" class="col-sm-3 control-label">File Name</label>
                    <div id="txtFilePath" style="">
                        <input id="filename" type="file" accept=".csv, .txt, .xls" class="filestyle" data-iconname="fa fa-cloud-upload">
                    </div>
                    
                    <div id="dateTrx" style="">
                        @(Html.Kendo().DatePicker().Name("dtTranDate").Format("dd/MM/yyyy").HtmlAttributes(new { @class = "form-control input-sm", style = "width: 130px;" }))
                    </div>
                </div>
                <!-- End Input File Name -->
                <!-- Begin Button Generate -->
                <div class="form-group">
                    <label class="col-sm-3 control-label"></label>
                    <button id=btnGenerate type="button" class="btn btn-default waves-effect waves-light">
                        <span class="btn-label">
                            <i class="fa fa-cog"></i>
                        </span>
                        Generate
                    </button>
                </div>
                <!-- End Button Generate -->
            </div>
            <div class="col-md-12">
                <table id="dgvData"></table>
            </div>
        </div>
    </div>
</div>
<script>
var X = XLSX;
var process_wb = (function() {
    var to_json = function to_json(workbook) {
        var data = [];
        workbook.SheetNames.forEach(function(y) {
            var worksheet = workbook.Sheets[y];
            var headers = {};
            for (z in worksheet) {
                if (z[0] === '!') continue;
                //parse out the column, row, and value
                var tt = 0;
                for (var i = 0; i < z.length; i++) {
                    if (!isNaN(z[i])) {
                        tt = i;
                        break;
                    }
                };
                var col = z.substring(0, tt);
                var row = parseInt(z.substring(tt));
                var value = worksheet[z].v;

                //store header names
                if (row == 1 && value) {
                    headers[col] = value;
                    continue;
                }

                if (!data[row]) data[row] = {};
                data[row][headers[col]] = value;
            }
            //drop those first two rows which are empty
            data.shift();
            data.shift();
            //console.log(data);
    });
    return data;
};
    return function process_wb(wb) {
        var result = to_json(wb);
        if (result.length == 0) {
            swal("Warning", "No Data Result!!", "warning");
            $("#dgvData").empty();            
        }
        else
        {
            populateGrid(result);
        }
    };
})();


var do_file = (function() {
    return function do_file(files) {
        var f = files[0];
        var reader = new FileReader();
        reader.onload = function(e) {            
            var data = e.target.result;
            data = new Uint8Array(data);
            process_wb(X.read(data, {type: 'array'}));
    };
     reader.readAsArrayBuffer(f);
};
})();


    (function () {
    var xlf = document.getElementById('filename');
        if(!xlf.addEventListener) return;
    function handleFile(e) {do_file(e.target.files); }
        xlf.addEventListener('change', handleFile, false);
    })();

    // add the grid options here 
    function populateGrid(response) {
        var columns = generateColumns(response);
        var gridOptions = {
            dataSource: {
                transport: {
                    read: function (options) {
                        options.success(response);
                    }
                },
                pageSize: 10,
                page: 1
            },
            columns: columns,
            pageable: true,
            selectable: true,
            height: 400
        };
        // reuse the same grid, swapping its options as needed
        var grid = $("#dgvData").data("kendoGrid");
        if (grid) {
            grid.setOptions(gridOptions);
            grid.select("tr:eq(0)");
        } else {
            $("#dgvData").kendoGrid(gridOptions);
        }
    }

    function generateColumns(response) {
        var columnNames = Object.keys(response[0]);
        return columnNames.map(function (name) {
            return {
                field: name,
                width: 200,
                title: name
            };
        })
    }

</script>

<script>
    var Type;
    var Code;
    $(document).ready(function () {
        var gridOptions = {
            height: 400
        };
        $("#dgvData").kendoGrid(gridOptions);
    });

    $("#btnGenerate").click(function ()
    {
        if ($("#btnGenerate").text() == "Generate") {
            var sFileCode = $("#cmbFileType").data('kendoDropDownList').value();
            var iTranDate = $("#dtTranDate").val();
            GenerateFileUpload(sFileCode, iTranDate);
        }
        else
        {
            SubSave();
        }
    });

    function GenerateFileUpload(sFileCode, iTranDate)
    {
        $.ajax({
            type: 'POST',
            url: '/Report/NFSGenerateFileUpload',
            data: { FileCode: sFileCode, TranDate: iTranDate },
            success: function (data) {
                if (data.blnResult) {
                    window.location = '/Report/Download?fileGuid=' + data.FileGuid
                        + '&filename=' + data.FileName;
                }
                else
                {
                    swal("Warning", data.ErrMsg, "warning");
                }
            }
        });
    }

    function SubSave()
    {
        var grid = $("#dgvData").data("kendoGrid");
        grid.refresh();
        var dataItem = grid.dataSource.view();
        if (dataItem.length == 0) {
            swal("Warning", "Data tidak boleh kosong!", "warning");
            return;
        }
        
        var sFileCode = $("#cmbFileType").data('kendoDropDownList').value();
        var sFileName = document.getElementById('filename');
        var arr;
        arr = grid.dataSource.view();
        var model = JSON.stringify({
            'FileCode': sFileCode,
            'FileName': sFileName.files[0].name,
            'listKYC': arr,
        });
        
        $.ajax({
            type: 'POST',
            url: '/Report/NFSGenerateFileDownload',
            data: model,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                if (data.blnResult == true) {
                    swal("Success", data.ErrMsg, "success");
                } else {
                    swal("Warning", data.ErrMsg, "warning");
                }
            }
        });

    }



    
    function onChangeFileType(e)
    {
        var dropdownlist = $("#cmbFileType").data("kendoDropDownList");
        Code = dropdownlist.value();
    }

    function onBoundFileType(e)
    {
        var dropdownlist = $("#cmbFileType").data("kendoDropDownList");
        var len = dropdownlist.dataSource.data().length;

        if (len > 0) {
            dropdownlist.select(0);
            onChangeFileType();
        }
        
    }

    function onChangeFileAction(e) {
        var dropdownlist = $("#cmbFileAction").data("kendoDropDownList");
        Type = dropdownlist.text();
        if (Type == "UPLOAD")
        {
            $("#btnGenerate").attr('class', 'btn btn-default waves-effect waves-light');
            $("#btnGenerate").html('<span class="btn-label"><i class= "fa fa-cog"></i></span >Generate');
            $("#labelFileName").text("Transaction Date");
            $('#txtFilePath').attr('style', 'display:none;');
            $('#dateTrx').attr('style', '');
        }
        else
        {
            $("#btnGenerate").attr('class', 'btn btn-warning waves-effect waves-light');
            $("#btnGenerate").html('<span class="btn-label"><i class= "fa fa-save"></i></span >Save Data');
            $("#labelFileName").text("File Name");
            $('#txtFilePath').attr('style', '');
            $('#dateTrx').attr('style', 'display:none;');
        }

        $.ajax({
            type: 'GET',
            url: '/Report/GetFileTypeList',
            data: { FileType: Type },
            success: function (data) {
                $("#cmbFileType").kendoDropDownList({
                    dataTextField: "FileDesc",
                    dataValueField: "FileCode",
                    dataSource: data,
                    change: onChangeFileType,
                    dataBound: onBoundFileType, 
                    height: 200
                });
            }
        });
    }    

    function onBoundFileAction(e) {
        var dropdownlist = $("#cmbFileAction").data("kendoDropDownList");
        var len = dropdownlist.dataSource.data().length;

        if (len > 0) {
            dropdownlist.select(0);
            onChangeFileAction();
        }
    }

    function toDate(dateStr) {
        var [day, month, year] = dateStr.split("/")
        return new Date(year, month - 1, day)
    }


</script>