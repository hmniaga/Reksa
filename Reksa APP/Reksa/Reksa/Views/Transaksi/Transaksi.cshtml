@using Kendo.Mvc.UI
@model Reksa.ViewModels.TransaksiListViewModel

@{
    ViewData["Title"] = "Transaksi";
}

<div class="card-box">
    <!-- Begin Button -->
    <div>
        <div class="input-group">
            <button id=btnRefresh class="btn btn-default waves-effect waves-light" style="margin-right:10px">
                <span class="btn-label">
                    <i class="fa fa-refresh"></i>
                </span>
                Refresh
            </button>
            <button id="btnNew" class="btn btn-primary waves-effect waves-light" style="margin-right:10px">
                <span class="btn-label">
                    <i class="fa fa-plus"></i>
                </span>
                New
            </button>

            <button id="btnEdit" class="btn btn-info waves-effect waves-light" style="margin-right:10px">
                <span class="btn-label">
                    <i class="fa fa-edit"></i>
                </span>
                Edit
            </button>
            <button id="btnSave" style="display:none;margin-right:10px;" class="btn btn-warning waves-effect waves-light">
                <span class="btn-label">
                    <i class="fa fa-save"></i>
                </span>
                Save
            </button>
            <button id="btnCancel" style="display:none;margin-right:10px;" class="btn btn-danger waves-effect waves-light">
                <span class="btn-label">
                    <i class="fa fa-remove"></i>
                </span>
                Cancel
            </button>
        </div>
    </div>
    <!-- End Button -->
</div>

        <!-- Begin Tab -->
        <div id="tabs" class="col-md-12" style="margin-top:20px">
            <ul class="nav nav-tabs" style="background-color:#efefef">
                <li class="active"><a data-toggle="tab" href="#tab-subscription" id="SUBS">Subscription</a></li>
                <li><a data-toggle="tab" href="#collapse-redemption" id="REDEMP">Redemption</a></li>
                <li><a data-toggle="tab" href="#collapse-reksaberjangka" id="SUBSRDB">Reksadana Berjangka</a></li>
                <li><a data-toggle="tab" href="#collapse-switchingnonrdb" id="SWCNONRDB">Switching Non RDB</a></li>
                <li><a data-toggle="tab" href="#collapse-switchingrdb" id="SWCRDB">Switching RDB</a></li>
                <li><a data-toggle="tab" href="#collapse-booking" id="BOOK">Booking</a></li>
            </ul>

            <div class="tab-content">
                <div id="tab-subscription" class="tab-pane fade in active">
                    <div class="row">
                        <div class="col-md-12">
                            @{
                                Html.RenderPartial("_Subscription.cshtml", Model);
                            }
                        </div>
                    </div>
                </div>
                <div id="collapse-redemption" class="tab-pane fade">
                    <h3>Redemption</h3>
                    <div class="row">
                        <div class="col-md-12">
                            @{
                                Html.RenderPartial("_Redemption.cshtml");
                            }
                        </div>
                    </div>
                </div>
                <div id="collapse-reksaberjangka" class="tab-pane fade">
                    <h3>Reksadana Berjangka</h3>
                    <div class="row">
                        <div class="col-md-12">
                            @{
                                Html.RenderPartial("_ReksaBerjangka.cshtml", Model);
                            }
                        </div>
                    </div>
                </div>
                <div id="collapse-switchingnonrdb" class="tab-pane fade">
                    <h3>SWITCHING NON RDB</h3>
                    <div class="row">
                        <div class="col-md-12">
                            @{
                                Html.RenderPartial("_SwitchingNonRDB.cshtml");
                            }
                        </div>
                    </div>
                </div>
                <div id="collapse-switchingrdb" class="tab-pane fade">
                    <h3>SWITCHING RDB</h3>
                    <div class="row">
                        <div class="col-md-12">
                            @{
                                Html.RenderPartial("_SwitchingRDB.cshtml");
                            }
                        </div>
                    </div>
                </div>
                <div id="collapse-booking" class="tab-pane fade">
                    <h3>BOOKING</h3>
                    <div class="row">
                        <div class="col-md-12">
                            @{
                                Html.RenderPartial("_Booking.cshtml");
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Tab -->
<script>
    
var _strTabName;
var _intType;
var IsSubsNew;
var _StatusTransaksiSubs;
var strBranch;
    var Today = new Date();
    var strBranch = '@Html.Raw(ViewBag.strBranch)';
    var ByPercent = false;
    var intPeriod = 0;
    var IsRedempAll;

    $(document).ready(function () {
        $('#tabs a[href="#tab-subscription"]').trigger('click');
        $("#btnRefresh").show();
        $("#btnNew").show();
        $("#btnEdit").show();
        $("#btnSave").show();
        $("#btnCancel").show();
        document.getElementById("btnSave").disabled = true;
        document.getElementById("btnCancel").disabled = true;

        _strTabName = "SUBS";

        subSetVisibleGrid(_strTabName);

        _intType = 0;
        ResetForm();
        DisableAllForm(false);
        DisableFormTrxSubs(false);
        DisableFormTrxRedemp(false);
        DisableFormTrxRDB(false);

        //GetComponentSearch();
        GetKodeKantor();
        //PopulateComboBox();
        //IsClickByDatagrid = false;

        //click
        $("#btnRefresh").click(function () {
            subRefresh();
        });
        $("#btnNew").click(function () {
            subNew();
        });
        $("#btnEdit").click(function () {
            subUpdate();
        });
        $("#btnSave").click(function () {
            subSave();
        });
        $("#btnCancel").click(function () {
            subCancel();
        });

        $("#btnAddSubs").click(function () {
            subAddSubs();
        });

        $("#btnAddRedemp").click(function () {
            subAddRedemp();
        });

    $("#srcProductSubs").click(function (ev) {
        var strCriteria = _strTabName + "#" + $('#srcCIFSubs_text1').val();            
        var url = '@Html.Raw(Url.Action("SearchTrxProductSubs", "Global"))';
        var target = $(this).attr('href', url + '?criteria=' + encodeURIComponent(strCriteria));
        $("#ProductSubsModal .modal-content").load(target, function () {
        $("#ProductSubsModal .modal-content").empty().append(this);
    });
        });

    $("#srcProductRedemp").click(function (ev) {
        var strCriteria = _strTabName + "#" + $('#srcCIFRedemp_text1').val();            
        var url = '@Html.Raw(Url.Action("SearchTrxProductRedemp", "Global"))';
        var target = $(this).attr('href', url + '?criteria=' + encodeURIComponent(strCriteria));
                $("#ProductRedempModal .modal-content").load(target, function () {
                    $("#ProductRedempModal .modal-content").empty().append(this);
    });
    });

    $("#srcCIFSubs").click(function (ev) {
        ev.preventDefault();
        var target = $(this).attr("href");
        $("#CustomerSubsModal .modal-content").load(target, function () {
            $("#CustomerSubsModal .modal-content").empty().append(this);
        });
    });
    $("#srcCIFRedemp").click(function (ev) {
        ev.preventDefault();
        var target = $(this).attr("href");
        $("#CustomerRedempModal .modal-content").load(target, function () {
            $("#CustomerRedempModal .modal-content").empty().append(this);
        });
    });
    $("#srcNoRefSubs").click(function (ev) {
        ev.preventDefault();
        var target = $(this).attr("href");
        $("#ReferensiSubsModal .modal-content").load(target, function () {
            $("#ReferensiSubsModal .modal-content").empty().append(this);
        });
    });
    $("#srcNoRefRedemp").click(function (ev) {
        ev.preventDefault();
        var target = $(this).attr("href");
        $("#ReferensiRedempModal .modal-content").load(target, function () {
            $("#ReferensiRedempModal .modal-content").empty().append(this);
        });
    });
    $("#srcClientSubs").click(function (ev) {
        ev.preventDefault();
        var ProdId = $('#ProdIdSubs').val();
        var url = '@Html.Raw(Url.Action("SearchClientSubs", "Global"))';
        var target = $(this).attr('href', url + '?ProdId=' + ProdId);
        $("#ClientSubsModal .modal-content").load(target, function () {
            $("#ClientSubsModal .modal-content").empty().append(this);
        });
        });     

    $("#srcNoRefSwcRDB").click(function (ev) {
        var CIFNo = $('#srcCIFSwcRDB_text1').val();
        var url = '@Html.Raw(Url.Action("SearchSwitchingRDB", "Global"))';
        $('#srcNoRefSwcRDB').attr('href', url + '?criteria=' + CIFNo);
    });

    $("#srcNoRefSwc").click(function (ev) {
        var CIFNo = $('#srcCIFSwc_text1').val();
        var url = '@Html.Raw(Url.Action("SearchSwitching", "Global"))';
        $('#srcRefSwc').attr('href', url + '?criteria=' + CIFNo);
    });

    $("#srcNoRefBooking").click(function (ev) {
        var CIFNo = $('#srcCIFBooking_text1').val();
        var url = '@Html.Raw(Url.Action("SearchBooking", "Global"))';
        $('#srcNoRefBooking').attr('href', url + '?criteria=' + CIFNo);
    });

        $("#checkFullAmtSubs").click(function () {
            if ($("#checkFeeEditSubs").prop('checked') == true)
                $("#checkFeeEditSubs").prop('checked', false)
            if ($('#srcProductSubs_text1').val() != '')
            {
                $("#_ComboJenisSubs").data('kendoDropDownList').enable(false);
                $('#MoneyFeeSubs').prop('disabled', true);
                $('#PercentageFeeSubs').prop('disabled', true);
            }
            var decNominalFee;
            var decPctFee;
            var intProdId = $('#ProdIdSubs').val();
            var intClientid
            var intTranType;

            if (IsSubsNew) {
                intTranType = 1;
                intClientid = 0;
            }
            else {
                intTranType = 2;
                //cmpsrClientSubs.ValidateField();
                intClientid = $('#ClientIdSubs').val();
            }
            
            HitungFee(intProdId, intClientid, intTranType, $('#MoneyNomSubs').val(), 0
                , $('#checkFullAmtSubs').val(), $('#checkFeeEditSubs').val()
                , $('#PercentageFeeSubs').val(), 1, $('#srcCIFSubs_text1').val()
                , function (FeeCurr) {
                    $("#labelFeeCurrencySubs").text("%");
                    $("#_KeteranganFeeSubs").text(FeeCurr);
                },
                function (NominalFee) {
                    $("#MoneyFeeSubs").val(NominalFee);
                },
                function (PctFee) {
                    $("#PercentageFeeSubs").val(PctFee);
                }
            );
        });

        $("#checkAll").click(function () {
            if ($("#checkAll").prop('checked') == true) {
                $("#RedempUnit").val($("#OutstandingUnitRedemp").val());
                $("#RedempUnit").prop('disabled', true);
                IsRedempAll = true;
            }
            else {
                $("#RedempUnit").val(0);
                $("#RedempUnit").prop('disabled', false);
                IsRedempAll = false;
            }  });


    //change
    $("#srcCIFSubs_text1").change(function () {
        if (_intType == 1) {
            //if (!CheckCIF($("#srcCIFSubs_text1").val())) {
            //    subCancel();
            //    return;
            //}
        }
        GetDataCIF($("#srcCIFSubs_text1").val(), 'SUBS');
    });        
            
    $("#srcCIFRedemp_text1").change(function () {
        if (_intType == 1) {
            //if (!CheckCIF($("#srcCIFSubs_text1").val())) {
            //    subCancel();
            //    return;
            //}
        }
        GetDataCIF($("#srcCIFRedemp_text1").val(), 'REDEMP');
    });
        
    $("#srcProductSubs_text1").change(function () {
        $("#srcCurrencySubs_text1").val($("#ProdCCYSubs").val());
        ValidateCurrency($("#ProdCCYSubs").val().trim(), function (output) {
            $("#srcCurrencySubs_text2").val(output);
        });
        });

    $("#srcProductRedemp_text1").change(function () {
        var strCriteria = $('#srcCIFRedemp_text1').val() + "#" + $('#srcProductRedemp_text1').val() + "#" + _strTabName + "#0";
        var url = '@Html.Raw(Url.Action("SearchTrxClientRedemp", "Global"))';
        $('#srcClientRedemp').attr('href', url + '?criteria=' + encodeURIComponent(strCriteria)); 
        });  

    $("#srcClientRedemp_text1").change(function () {
            
            //GetLatestBalance($("#ClientIdRedemp").val(), function (res) { $("#OutstandingUnitRedemp").val(res) });
            //nanti ini dihapus
            swal("Warning", "nanti syntax ini dihapus, ini cm buat debug karena oustanding nya masih 0", "warning");
            $("#OutstandingUnitRedemp").val('10000')
        });  

    ValidateOffice(strBranch, function (res) {
            $("#srcOfficeSubs_text2").val(res);
            $("#srcOfficeRedemp_text2").val(res);
            $("#srcOfficeRDB_text2").val(res);
            $("#srcOfficeSwc_text2").val(res);
            $("#srcOfficeSwcRDB_text2").val(res);
            $("#srcOfficeBooking_text2").val(res);
        });

    $("#srcSellerSubs_text1").change(function () {
        $("#srcWaperdSubs_text1").val($("#srcSellerSubs_text1").val());
        ValidateWaperd($("#srcSellerSubs_text1").val(),
            function (WaperdNo) {
                $("#srcWaperdSubs_text2").val(WaperdNo);            
            },
            function (DateExpire) {
                $("#textExpireWaperdSubs").val(DateExpire);
            }
        );        
        });

    $("#srcSellerRedemp_text1").change(function () {
        $("#srcWaperdRedemp_text1").val($("#srcSellerRedemp_text1").val());
        ValidateWaperd($("#srcSellerRedemp_text1").val(),
            function (WaperdNo) {
                $("#srcWaperdRedemp_text2").val(WaperdNo);
            },
            function (DateExpire) {
                $("#textExpireWaperdRedemp").val(DateExpire);
            }
        );
        });

    $("#srcSellerSwc_text1").change(function () {
        $("#srcWaperdSwc_text1").val($("#srcSellerSwc_text1").val());
        ValidateWaperd($("#srcSellerSwc_text1").val(),
            function (WaperdNo) {
                $("#srcWaperdSwc_text2").val(WaperdNo);
            },
            function (DateExpire) {
                $("#textExpireWaperdSwc").val(DateExpire);
            }
        );
    });
});

    $('a[data-toggle=tab]').click(function () {
        _strTabName = this.id;
    });


    function subAddSubs()
    {
        var strWarnMsg = '';
        var strWarnMsg2 = '';

        var strTranCode = "";
        var strNewClientCode = "";
        var _PercentageFee;
        var _NominalFee;
        var intProductId = 0;

        var grid = $("#dataGridViewSubs").data("kendoGrid");
        grid.refresh();
        var dataItem = grid.dataSource.view();
        if (dataItem.length >= 3) {
            swal("Warning", "Maksimal hanya dapat menambah 3 transaksi !", "warning");
            return;
        }
        
        if ($("#srcProductSubs_text1").val() == "") {
            swal("Warning", "Kode Produk harus diisi", "warning");
            return;
        }
            if ($("#srcCurrencySubs_text1").val() == "") {
                swal("Warning", "Mata Uang Produk harus diisi", "warning");
                return;
            }
            if ((IsSubsNew == false) && ($("#srcClientSubs_text1").val() == "")) {
                swal("Warning", "Client Code harus diisi", "warning");
                return;
            }
        if ($("#MoneyNomSubs").val() == 0) {
            swal("Warning", "Nominal harus diisi", "warning");
            return;
        }
            if (($("#maskedRekeningSubsUSD").val() == "") && ($("#maskedRekeningSubsMC").val() == "") && ($("#srcCurrencySubs_text1").val() == "USD")) {
                swal("Warning", "Rekening USD / Multicurrency tidak boleh kosong untuk transaksi currency USD!", "warning");
                return;
            }
            if (($("#maskedRekeningSubs").val() == "") && ($("#maskedRekeningSubsMC").val() == "") && ($("#srcCurrencySubs_text1").val() == "IDR")) {
                swal("Warning", "Rekening IDR / Multicurrency tidak boleh kosong untuk transaksi currency IDR!", "warning");
                return;
            }

            //if (cTransaksi.dttSubscription.Select(strData).Length != 0) {
            //    MessageBox.Show("Subscription ke produk " + cmpsrProductSubs.Text1 + " sudah ada!", "Transaksi Subscription", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            //    return;
            //}
            
            intProductId = $("#ProdIdSubs").val();

            var ClientCodeSubsAdd;
            ClientCodeSubsAdd = "";

            CheckIsSubsNew($("#srcCIFSubs_text1").val(), intProductId, false,
                function (IsSubsNew) {
                    IsSubsNew = IsSubsNew;
                },
                function (ClientCodeSubsAdd) {
                    strNewClientCode = ClientCodeSubsAdd;
                    return strNewClientCode;
                }
            );

        if ($("#_ComboJenisSubs").text() == "By %") {
            _PercentageFee = $("#MoneyFeeSubs").val();
            _NominalFee = $("#PercentageFeeSubs").val();
        }
        else {
            _PercentageFee = $("#PercentageFeeSubs").val();
            _NominalFee = $("#MoneyFeeSubs").val();
        }
        
        var MoneyNomSubs = parseFloat($("#MoneyNomSubs").val().toString().replace(/\./g, "").replace(/\,/g, ".")).toFixed(2);      

        var res  = GenerateTranCodeAndClientCode(_strTabName, IsSubsNew, $("#srcProductSubs_text1").val(),
            $("#srcClientSubs_text1").val(), $("#srcCIFSubs_text1").val(),
            //$("#checkFeeEditSubs").val(), _PercentageFee, 0
            $("#checkFeeEditSubs").val(), 1.5, 0
            , $("#checkFullAmtSubs").val(), _NominalFee, MoneyNomSubs, 0, false, 0, 0
            , _intType);


        res.success(function (data) {
            if (data.blnResult) {
                strTranCode = data.strTrancode;
                strNewClientCode = data.strClientCode;
                strWarnMsg = data.strWarnMsg;
                strWarnMsg2 = data.strWarnMsg2;
                if (strWarnMsg != '') {
                    swal({
                        title: "Information",
                        text: "Produk yang dipilih diatas ketentuan profile nasabah. Lanjutkan transaksi?",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: 'btn-info',
                        confirmButtonText: "Yes",
                        closeOnConfirm: false,
                        closeOnCancel: false
                    },
                        function (isConfirm) {
                            if (!isConfirm) {
                                swal("Canceled", "Proses transaksi dibatalkan.", "error");
                                return;
                            }
                            else {
                                swal("Confirmed", "Profil Risiko produk lebih tinggi dari Profil Risiko Nasabah . PASTIKAN Nasabah sudah menandatangani kolom Profil Risiko pada Subscription/Switching Form", "success");
                            }
                        });
                }

                if (strWarnMsg2 != '') {
                    swal({
                        title: "Information",
                        text: strWarnMsg2,
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: 'btn-info',
                        confirmButtonText: "Yes",
                        closeOnConfirm: false,
                        closeOnCancel: false
                    },
                        function (isConfirm) {
                            if (!isConfirm) {
                                swal("Canceled", "Proses transaksi dibatalkan.", "error");
                                return;
                            }
                            else {
                                swal("Confirmed", "", "success");
                            }
                        });
                }

                if (strTranCode != "") {
                    var arrSubscription = [];
                    var obj = {};
                    obj['NoTrx'] = '';
                    obj['StatusTransaksi'] = '';
                    obj['KodeProduk'] = $("#srcProductSubs_text1").val();
                    obj['NamaProduk'] = $("#srcProductSubs_text2").val();
                    obj['ClientCode'] = strNewClientCode;
                    obj["Nominal"] = MoneyNomSubs;
                    if ($('#checkFeeEditSubs').prop('checked') == true) {
                        obj["EditFeeBy"] = $("#_ComboJenisSubs").val();
                    }
                    else {
                        obj["EditFeeBy"] = "";
                    }

                    obj["FullAmount"] = $("#checkFullAmtSubs").prop('checked');
                    obj["PhoneOrder"] = $("#checkPhoneOrderSubs").prop('checked');
                    var dateTglTransaksiSubs = toDate($("#dateTglTransaksiSubs").val());
                    obj['TglTrx'] = dateTglTransaksiSubs;
                    obj["CCY"] = $("#srcCurrencySubs_text1").val();
                    obj["EditFee"] = $("#checkFeeEditSubs").prop('checked');


                    obj["JenisFee"] = $("#_ComboJenisSubs").val();
                    obj["IsNew"] = IsSubsNew;
                    obj["ApaDiUpdate"] = false;
                    obj["TrxTaxAmnesty"] = false;

                    if (IsSubsNew) {
                        obj["OutstandingUnit"] = 0;
                    }
                    else {
                        //int intClientId = int.Parse(cmpsrClientSubs[2].ToString());
                        //var decUnitBalance = GetLatestBalance(intClientId);
                        obj["OutstandingUnit"] = decUnitBalance;
                    }
                    if ($("#_ComboJenisSubs").text() == "By %") {
                        obj["FeeKet"] = $("#labelFeeCurrencySubs").val();
                        obj["FeeCurr"] = $("#_KeteranganFeeSubs").val();

                        obj["NominalFee"] = $("#PercentageFeeSubs").val();
                        obj["PctFee"] = $("#MoneyFeeSubs").val(); n
                    }
                    else {
                        obj["FeeKet"] = $("#_KeteranganFeeSubs").val();
                        obj["FeeCurr"] = $("#labelFeeCurrencySubs").val();

                        obj["NominalFee"] = $("#MoneyFeeSubs").val();
                        obj["PctFee"] = $("#PercentageFeeSubs").val();
                    }
                    arrSubscription.push(obj);

                    var dataSet = grid.dataSource.view();
                    $.merge(arrSubscription, dataSet);

                    var dataSource = new kendo.data.DataSource(
                        {
                            data: arrSubscription
                        });
                    grid.setDataSource(dataSource);
                    grid.dataSource.pageSize(5);
                    grid.dataSource.page(1);
                    grid.select("tr:eq(0)");

                    subSetVisibleGrid(_strTabName);
                    ResetFormTrxSubs();
                    DisableFormTrxSubs(true);
                    document.getElementById("btnEditSubs").disabled = true;
                    document.getElementById("btnAddSubs").disabled = false;
                    //if (!GlobalFunctionCIF.CekCIFProductFacility(cmpsrCIFSubs.Text1)) {
                    //    checkPhoneOrderSubs.Enabled = false;
                    //    checkPhoneOrderSubs.Checked = false;
                    //}
                    //else {
                    //    checkPhoneOrderSubs.Enabled = true;
                    //}
                }
                else
                {
                    swal("Warning", "Gagal generate kode transaksi!", "warning");
                }
            }
            else {
                swal("Warning", data.ErrMsg, "warning");
            }
        });
    }

    function subAddRedemp()
    {
        var strWarnMsg = '';
        var strWarnMsg2 = '';

        var strTranCode = "";
        var strNewClientCode = "";
        var _PercentageFee;
        var _NominalFee;
        var intProductId = 0;

        var grid = $("#dataGridViewRedemp").data("kendoGrid");
        grid.refresh();
        var dataItem = grid.dataSource.view();
        if (dataItem.length >= 3) {
            swal("Warning", "Maksimal hanya dapat menambah 3 transaksi !", "warning");
            return;
        }
        if ($("#srcProductRedemp_text1").val() == "") {
            swal("Warning", "Kode Produk harus diisi", "warning");
            return;
        }
        if ($("#srcClientRedemp_text1").val().Text1 == "") {
            swal("Warning", "Client Code harus diisi", "warning");
            return;
        }
        if ($("#RedempUnit").val() == 0) {
            swal("Warning", "Unit harus diisi", "warning");
            return;
        }
        if (+$("#RedempUnit").val() > +$("#OutstandingUnitRedemp").val()) {
            swal("Warning", "Redemption unit tidak boleh lebih besar dari Outstanding Unit!", "warning");
            return;
        }
        //string strData = String.Format("ClientCode='{0}'",
        //    cmpsrClientRedemp.Text1);

        //if (cTransaksi.dttRedemption.Select(strData).Length != 0) {
        //    MessageBox.Show("Redemption untuk Client Code " + cmpsrClientRedemp.Text1 + " sudah ada!", "Transaksi Redemption", MessageBoxButtons.OK, MessageBoxIcon.Warning);
        //    return;
        //}


        var res = GenerateTranCodeAndClientCode(_strTabName, false, $("#srcProductRedemp_text1").val(),
            $("#srcClientRedemp_text1").val(), $("#srcCIFRedemp_text1").val(),
            //$("#checkFeeEditSubs").val(), _PercentageFee, 0
            $("#checkFeeEditRedemp").val(), $("#MoneyFeeRedemp").val(), intPeriod
            , false, $("#PercentageFeeRedemp").val(), 0, $("#RedempUnit").val(), IsRedempAll, 0, 0
            , _intType);


        res.success(function (data) {
            if (data.blnResult) {
                strTranCode = data.strTrancode;
                strNewClientCode = data.strClientCode;
                strWarnMsg = data.strWarnMsg;
                strWarnMsg2 = data.strWarnMsg2;

                if (strWarnMsg2 != '') {
                    swal({
                        title: "Information",
                        text: strWarnMsg2,
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonClass: 'btn-info',
                        confirmButtonText: "Yes",
                        closeOnConfirm: false,
                        closeOnCancel: false
                    },
                        function (isConfirm) {
                            if (!isConfirm) {
                                swal("Canceled", "Proses transaksi dibatalkan.", "error");
                                return;
                            }
                            else {
                                swal("Confirmed", "", "success");
                            }
                        });
                }

                if (strTranCode != "") {
                    var arrRedemption = [];
                    var obj = {};
                    obj['NoTrx'] = '';
                    var dateTglTransaksiRedemp = toDate($("#dateTglTransaksiRedemp").val());
                    obj['TglTrx'] = dateTglTransaksiRedemp;
                    obj['KodeProduk'] = $("#srcProductRedemp_text1").val();
                    obj['NamaProduk'] = $("#srcProductRedemp_text2").val();
                    if ($('#checkFeeEditRedemp').prop('checked') == true) {
                        obj["EditFeeBy"] = $("#_ComboJenisRedemp").val();
                    }
                    else {
                        obj["EditFeeBy"] = "";
                    }
                    obj['ClientCode'] = strNewClientCode;
                    obj["OutstandingUnit"] = $("#OutstandingUnitRedemp").val();
                    obj["RedempUnit"] = $("#RedempUnit").val();
                    obj["PhoneOrder"] = $("#checkPhoneOrderRedemp").prop('checked');
                    obj["EditFee"] = $("#checkFeeEditRedemp").prop('checked');
                    obj["JenisFee"] = $("#_ComboJenisRedemp").val();
                    obj["PctFee"] = $("#MoneyFeeRedemp").val(); 
                    obj["FeeKet"] = $("#labelFeeCurrencyRedemp").val();
                    obj["NominalFee"] = $("#PercentageFeeRedemp").val();
                    obj["FeeCurr"] = $("#_KeteranganFeeRedemp").val();
                    obj["IsRedempAll"] = IsRedempAll;
                    obj["Period"] = intPeriod;
                    obj["ApaDiUpdate"] = false;
                    obj["TrxTaxAmnesty"] = false;
                    arrRedemption.push(obj);

                    var dataSet = grid.dataSource.view();
                    $.merge(arrRedemption, dataSet);

                    var dataSource = new kendo.data.DataSource(
                        {
                            data: arrRedemption
                        });
                    grid.setDataSource(dataSource);
                    grid.dataSource.pageSize(5);
                    grid.dataSource.page(1);
                    grid.select("tr:eq(0)");

                    subSetVisibleGrid(_strTabName);
                    ResetFormTrxRedemp();
                    DisableFormTrxRedemp(true);
                    document.getElementById("btnEditRedemp").disabled = true;
                    document.getElementById("btnAddRedemp").disabled = false;
                    //if (!GlobalFunctionCIF.CekCIFProductFacility(cmpsrCIFSubs.Text1)) {
                    //    checkPhoneOrderSubs.Enabled = false;
                    //    checkPhoneOrderSubs.Checked = false;
                    //}
                    //else {
                    //    checkPhoneOrderSubs.Enabled = true;
                    //}
                }
                else {
                    swal("Warning", "Gagal generate kode transaksi!", "warning");
                }
            }
            else {
                swal("Warning", data.ErrMsg, "warning");
            }
        });
    }

    function GetDataCIF(CIFNo, TabName)
    {
        $.ajax({
            type: 'GET',
            url: '/Transaksi/GetDataCIF',
            data: { CIFNo: CIFNo},
            success: function (data) {
                if (data.blnResult) {
                    if (TabName == "SUBS") {
                        RefreshNasabahSubs(data);
                    } else if (TabName == "REDEMP") {
                        RefreshNasabahRedemp(data);
                    } else if (TabName == "RDB") {
                    } else if (TabName == "SWC") {
                    } else if (TabName == "SWCRDB")
                    {
                    }
                }
                else {
                    swal("Warning", data.ErrMsg, "warning");
                }
            }
        });
    }

    function subNew() {
        _intType = 1;
        ResetForm();
        DisableAllForm(true);
        subResetToolBar();
        //SetDefaultValue();

        $('#checkFullAmtSubs').prop('checked', true);

        $("#srcCIFSubs_text1").prop('disabled', false);
        $("#srcCIFSubs").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');

        $("#srcCIFRedemp_text1").prop('disabled', false);
        $("#srcCIFRedemp").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');

        $("#srcCIFRDB_text1").prop('disabled', false);
        $("#srcCIFRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');

        $("#srcCIFSwc_text1").prop('disabled', false);
        $("#srcCIFSwc").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');

        $("#srcCIFSwcRDB_text1").prop('disabled', false);
        $("#srcCIFSwcRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');

        $("#CIFNoBooking").prop('disabled', false);
        $("#srcCIFBooking").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');

        var strCriteria = "";
        GetKodeKantor();
        //cTransaksi.ClearData();
        SetEnableOfficeId(strBranch);

        var url;
        if (_strTabName == "SUBS") {
            IsSubsNew = true;
            DisableFormTrxSubs(true);
            //REKSA_CIF_ALL
            url = '@Html.Raw(Url.Action("SearchCIF", "Global"))';
            $('#srcCIFSubs').attr('href', url);

            $("#srcClientSubs_text1").prop('disabled', true);
            $("#srcClientSubs").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

            strCriteria = _strTabName + "#" + $("#srcCIFSubs_text1").val();
            //REKSA_TRXPRODUCT
            url = '@Html.Raw(Url.Action("SearchTrxProduct", "Global"))';
            $('#scrProductSubs').attr('href', url + '?criteria=' + strCriteria);

            document.getElementById("btnAddSubs").disabled = false;
            document.getElementById("btnEditSubs").disabled = true;
            $("#dateTglTransaksiSubs").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());
        }
        else if (_strTabName == "REDEMP") {
            DisableFormTrxRedemp(true);
            IsRedempAll = false;
            //REKSA_CIF_ALL
            url = '@Html.Raw(Url.Action("SearchCIF", "Global"))';
            $('#srcCIFRedemp').attr('href', url);
            
            strCriteria = _strTabName + "#" + $("#srcCIFRedemp_text1").val();
            //REKSA_TRXPRODUCT
            url = '@Html.Raw(Url.Action("SearchTrxProduct", "Global"))';
            $('#srcProductRedemp').attr('href', url + '?criteria=' + strCriteria);

            document.getElementById("btnAddRedemp").disabled = false;
            document.getElementById("btnEditRedemp").disabled = true;
            $("#dateTglTransaksiRedemp").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());
        }
        else if (_strTabName == "SUBSRDB") {
            DisableFormTrxRDB(true);

            //REKSA_CIF_ALL
            url = '@Html.Raw(Url.Action("SearchCIF", "Global"))';
            $('#srcCIFRDB').attr('href', url);

            $("#srcClientRDB_text1").prop('disabled', true);
            $("#srcClientRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

            strCriteria = _strTabName + "#" + $("#srcCIFRDB_text1").val();
            //REKSA_TRXPRODUCT
            url = '@Html.Raw(Url.Action("SearchTrxProduct", "Global"))';
            $('#srcProductRDB').attr('href', url + '?criteria=' + strCriteria);

            document.getElementById("btnAddRDB").disabled = false;
            document.getElementById("btnEditRDB").disabled = true;
            $("#dateTglTransaksiRDB").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());
        }
        else if (_strTabName == "BOOK") {
            //REKSA_CIF_ALL
            url = '@Html.Raw(Url.Action("SearchCIF", "Global"))';
            $('#srcCIFBooking').attr('href', url);

            strCriteria = _strTabName + "#" + $("#CIFNoBooking").val();
            //REKSA_TRXPRODUCT
            url = '@Html.Raw(Url.Action("SearchTrxProduct", "Global"))';
            $('#srcProductBooking').attr('href', url + '?criteria=' + strCriteria);

            $("#dateTglTransaksiBooking").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());
        }
        else if (_strTabName == "SWCNONRDB") {
            //REKSA_CIF_ALL
            url = '@Html.Raw(Url.Action("SearchCIF", "Global"))';
            $('#srcCIFSwc').attr('href', url);

            strCriteria = _strTabName + "#" + $("#srcCIFSwc_text1").val();
            //REKSA_TRXPRODUCT
            url = '@Html.Raw(Url.Action("SearchTrxProduct", "Global"))';
            $('#srcProductSwcOut').attr('href', url + '?criteria=' + strCriteria);

            //TRXSWITCHIN
            url = '@Html.Raw(Url.Action("SrcTransSwitchIn", "Global"))';
            $('#srcProductSwcIn').attr('href', url + '?criteria=' + $('#ProductCodeSwcOut').val());

            $("#dateTglTransaksiSwc").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());
        }
        else if (_strTabName == "SWCRDB") {
            //REKSA_CIF_ALL
            url = '@Html.Raw(Url.Action("SearchCIF", "Global"))';
            $('#srcCIFSwcRDB').attr('href', url);

            strCriteria = _strTabName + "#" + $("#srcCIFSwcRDB_text1").val();
            //REKSA_TRXPRODUCT
            url = '@Html.Raw(Url.Action("SearchTrxProduct", "Global"))';
            $('#srcProductSwcRDBOut').attr('href', url + '?criteria=' + strCriteria);

            //TRXSWITCHIN
            url = '@Html.Raw(Url.Action("SrcTransSwitchIn", "Global"))';
            $('#srcProductSwcRDBIn').attr('href', url + '?criteria=' + $('#ProductCodeSwcRDBOut').val());

            $("#dateTglTransaksiSwcRDB").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());
        }
    }

    function subRefresh() {
        var CIFNo;
        var RefID;
        if (_strTabName == "SUBS") {
            if ($("#srcNoRefSubs_text1").val().length == 0) {
                swal("Warning", "Silahkan Pilih kode Nomor referensi terlebih dahulu!", "warning");
                return;
            }
            CIFNo = $("#srcCIFSubs_text1").val();
            RefID = $("#srcNoRefSubs_text1").val();
            $.ajax({
                type: 'GET',
                url: '/Transaksi/RefreshTransaction',
                data: { RefID: RefID, CIFNo: CIFNo, _strTabName: _strTabName },
                success: function (data) {
                    if (data.blnResult)
                        RefreshSubscription(data);
                    else
                        swal("Warning", "No Referensi tidak ditemukan untuk transaksi subscription!", "warning");
                }
            });
        }
        else if (_strTabName == "REDEMP") {
            if ($("#srcNoRefRedemp_text1").val().length == 0) {
                swal("Warning", "Silahkan Pilih kode Nomor referensi terlebih dahulu!", "warning");
                return;
            }
            CIFNo = $("#srcCIFRedemp_text1").val();
            RefID = $("#srcNoRefRedemp_text1").val();
            $.ajax({
                type: 'GET',
                url: '/Transaksi/RefreshTransaction',
                data: { RefID: RefID, CIFNo: CIFNo, _strTabName: _strTabName },
                success: function (data) {
                    RefreshRedemption(data);
                }
            });
        }
        else if (_strTabName == "SUBSRDB") {
            if ($("#srcNorefRDB_text1").val().length == 0) {
                swal("Warning", "Silahkan Pilih kode Nomor referensi terlebih dahulu!", "warning");
                return;
            }
            CIFNo = $("#srcCIFRDB_text1").val();
            RefID = $("#srcNorefRDB_text1").val();
            $.ajax({
                type: 'GET',
                url: '/Transaksi/RefreshTransaction',
                data: { RefID: RefID, CIFNo: CIFNo, _strTabName: _strTabName },
                success: function (data) {
                    RefreshRDB(data);
                }
            });
        }
        else if (_strTabName == "SWCNONRDB") {
            CIFNo = $("#srcCIFSwc_text1").val();
            RefID = $("#srcNoRefSwc_text1").val();
            $.ajax({
                type: 'GET',
                url: '/Transaksi/RefreshSwitching',
                data: { RefID: RefID, CIFNo: CIFNo },
                success: function (data) {
                    RefreshSwc(data);
                }
            });
        }
        else if (_strTabName == "SWCRDB") {
            CIFNo = $("#srcCIFSwcRDB_text1").val();
            RefID = $("#srcNoRefSwcRDB_text1").val();
            console.log(RefID);
            $.ajax({
                type: 'GET',
                url: '/Transaksi/RefreshSwitchingRDB',
                data: { RefID: RefID, CIFNo: CIFNo },
                success: function (data) {
                    RefreshSwcRDB(data);
                }
            });
        }
        else if (_strTabName == "BOOK") {
            CIFNo = $("#srcCIFBooking_text1").val();
            RefID = $("#srcNoRefBooking_text1").val();
            $.ajax({
                type: 'GET',
                url: '/Transaksi/RefreshBooking',
                data: { RefID: RefID, CIFNo: CIFNo },
                success: function (data) {
                    RefreshBooking(data);
                }
            });
        }
        _intType = 0;
        DisableAllForm(false);
        subResetToolBar();
    }

    function subSave() {
        if (_strTabName == "SUBS")
        {
            if ($("#srcOfficeSubs_text1").val() == "") {
                swal("Warning", "Kode Kantor harus diisi", "warning");
                return;
            }

            //string strIsAllowed = "";
            //if (clsValidator.ValidasiInputKodeKantor(ClQ, cmpsrKodeKantorSubs.Text1, out strIsAllowed)) {
            //    if (strIsAllowed == "0") {
            //        MessageBox.Show("Error [ReksaValidateOfficeId], Kode kantor tidak terdaftar ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            //        ResetFormSubs();
            //        return;
            //    }
            //}
            //else {
            //    MessageBox.Show("Error [ReksaValidateOfficeId]! ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            //    return;
            //}

            //string strErrorMessage;
            //strIsAllowed = "";
            //if (clsValidator.ValidasiUserCBO(ClQ, cmpsrKodeKantorSubs.Text1, strBranch, out strIsAllowed, out strErrorMessage)) {
            //    if (strIsAllowed == "0") {
            //        MessageBox.Show("Error [ReksaValidateUserCBOOffice], " + strErrorMessage, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            //        ResetFormSubs();
            //        return;
            //    }
            //}
            //else {
            //    MessageBox.Show("Error [ReksaValidateUserCBOOffice]!", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            //    return;
            //}

            if ($("#srcCIFSubs_text1").val() == "") {
                swal("Warning", "CIF harus diisi", "warning");
                return;
            }

            //if (!GlobalFunctionCIF.RetrieveCIFData(intNIK, strBranch, strModule, strGuid, Int64.Parse(cmpsrCIFSubs.Text1))) {
            //    swal("Warning", "Gagal validasi CIF ke modul ProCIF", "warning");
            //    return;
            //}

            //if ((checkPhoneOrderSubs.Checked) && (!GlobalFunctionCIF.CekCIFProductFacility(cmpsrCIFSubs.Text1))) {
            //    swal("Warning", "Nasabah tidak memiliki fasilitas phone order!", "warning");
            //    return;
            //}

            if ($("#textShareHolderIdSubs").val() == "") {
                swal("Warning", "Shareholder ID harus terdaftar", "warning");
                return;
            }

            if ($("#srcSellerSubs_text1").val() == "") {
                swal("Warning", "NIK Seller harus diisi", "warning");
                return;
            }

            if ($("#srcWaperdSubs_text1").val() == "") {
                swal("Warning", "NIK Seller tidak terdaftar sbg WAPERD", "warning");
                return;
            }

            var grid = $("#dataGridViewSubs").data("kendoGrid");
            grid.refresh();
            var dataItem = grid.dataSource.view();

            if (dataItem.length == 0) {
                swal("Warning", "Data transaksi subscription tidak boleh kosong!", "warning");
                return;
            }

            //if (!System.Convert.ToBoolean(objFormDocument.chkbDocFCSubscriptionForm.CheckState)) {
            //    swal("Penerimaan Dokumen dari Nasabah", "Formulir Subscription wajib ada", "warning");
            //    return;
            //}
            //else if (!System.Convert.ToBoolean(objFormDocument.chkbDocFCIDCopy.CheckState)) {
            //    swal("Penerimaan Dokumen dari Nasabah", "Copy Bukti Identitas wajib ada", "warning");
            //    return;
            //}
            //else if (!System.Convert.ToBoolean(objFormDocument.chkbDocTCSubscriptionForm.CheckState)) {
            //    swal("Dokumen yang diterima oleh Nasabah", "Copy Formulir Subscription wajib ada", "warning");
            //    return;
            //}
            //else if (!System.Convert.ToBoolean(objFormDocument.chkbDocTCProspectus.CheckState)) {
            //    swal("Dokumen yang diterima oleh Nasabah", "Prospektus wajib ada", "warning");
            //    return;
            //}
            //else if (!System.Convert.ToBoolean(objFormDocument.chkbDocTCFundFactSheet.CheckState)) {
            //    swal("Dokumen yang diterima oleh Nasabah", "Fund Fact Sheet wajib ada", "warning");
            //    return;
            //}

            var grid = $("#dataGridViewSubs").data("kendoGrid");            
            var arrSubs;
            var arrRedemp = [];
            var arrRDB = [];
            arrSubs = grid.dataSource.view();

            var model = JSON.stringify({
                'intType': _intType,
                'strTranType': _strTabName,
                'RefID': $("#srcNoRefSubs_text1").val(),
                'CIFNo': $("#srcCIFSubs_text1").val(),
                'OfficeId': $("#srcOfficeSubs_text1").val(),
                'NoRekening': $("#maskedRekeningSubs").val(),
                'dtSubs': arrSubs,
                'dtRedemp': arrRedemp,
                'dtRDB': arrRDB,
                'Inputter': $("#txtbInputterSubs").val(),
                'Seller': $("#srcSellerSubs_text1").val(),
                'Waperd': $("#srcWaperdSubs_text1").val(),
                'NoRekeningUSD': $("#maskedRekeningSubsUSD").val(),
                'NoRekeningMC': $("#maskedRekeningSubsMC").val(),
                'Referentor': $("#srcReferentorSubs_text1").val(),
                'pbDocFCSubscriptionForm': false,
                'pbDocFCDevidentAuthLetter': false,
                'pbDocFCJoinAcctStatementLetter': false,
                'pbDocFCIDCopy': false,
                'pbDocFCOthers': false,
                'pbDocTCSubscriptionForm': false,
                'pbDocTCTermCondition': false,
                'pbDocTCProspectus': false,
                'pbDocTCFundFactSheet': false,
                'pbDocTCOthers': false,
                'pcDocFCOthersList': '',
                'pcDocTCOthersList': ''
            });
            MaintainAllTransaksi(model);           
        }
        else if (_strTabName == "REDEMP") {
            if ($("#srcOfficeRedemp_text1").val() == "") {
                swal("Warning", "Kode Kantor harus diisi", "warning");
                return;
            }

            //string strIsAllowed = "";
            //if (clsValidator.ValidasiInputKodeKantor(ClQ, cmpsrKodeKantorRedemp.Text1, out strIsAllowed)) {
            //    if (strIsAllowed == "0") {
            //        MessageBox.Show("Error [ReksaValidateOfficeId], Kode kantor tidak terdaftar ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            //        ResetFormRedemp();
            //        return;
            //    }
            //}
            //else {
            //    MessageBox.Show("Error [ReksaValidateOfficeId]! ", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            //    return;
            //}

            //string strErrorMessage;
            //strIsAllowed = "";
            //if (clsValidator.ValidasiUserCBO(ClQ, cmpsrKodeKantorRedemp.Text1, strBranch, out strIsAllowed, out strErrorMessage)) {
            //    if (strIsAllowed == "0") {
            //        MessageBox.Show("Error [ReksaValidateUserCBOOffice], " + strErrorMessage, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            //        ResetFormRedemp();
            //        return;
            //    }
            //}
            //else {
            //    MessageBox.Show("Error [ReksaValidateUserCBOOffice]!", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            //    return;
            //}

            if ($("#srcCIFRedemp_text1").val() == "") {
                swal("Warning", "CIF harus diisi", "warning");
                return;
            }

            //if (!GlobalFunctionCIF.RetrieveCIFData(intNIK, strBranch, strModule, strGuid, Int64.Parse(cmpsrCIFRedemp.Text1))) {
            //    MessageBox.Show("Gagal validasi CIF ke modul ProCIF", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            //    return;
            //}

            //if ((checkPhoneOrderRedemp.Checked) && (!GlobalFunctionCIF.CekCIFProductFacility(cmpsrCIFRedemp.Text1))) {
            //    MessageBox.Show("Nasabah tidak memiliki fasilitas phone order!", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            //    return;
            //}

            if ($("#textShareHolderIdRedemp").val() == "") {
                swal("Warning", "Shareholder ID harus terdaftar", "warning");
                return;
            }

            if ($("#srcSellerRedemp_text1").val() == "") {
                swal("Warning", "NIK Seller harus diisi", "warning");
                return;
            }

            if ($("#srcWaperdRedemp_text1").val() == "") {
                swal("Warning", "NIK Seller tidak terdaftar sbg WAPERD", "warning");
                return;
            }

            var grid = $("#dataGridViewRedemp").data("kendoGrid");
            grid.refresh();
            var dataItem = grid.dataSource.view();

            if (dataItem.length == 0) {
                swal("Warning", "Data transaksi redemption tidak boleh kosong!", "warning");
                return;
            }

            var grid = $("#dataGridViewRedemp").data("kendoGrid");
            var arrSubs = [];
            var arrRedemp;
            var arrRDB = [];
            arrRedemp = grid.dataSource.view();

            var model = JSON.stringify({
                'intType': _intType,
                'strTranType': _strTabName,
                'RefID': $("#srcNoRefRedemp_text1").val(),
                'CIFNo': $("#srcCIFRedemp_text1").val(),
                'OfficeId': $("#srcOfficeRedemp_text1").val(),
                'NoRekening': $("#maskedRekeningRedemp").val(),
                'dtSubs': arrSubs,
                'dtRedemp': arrRedemp,
                'dtRDB': arrRDB,
                'Inputter': $("#txtbInputterRedemp").val(),
                'Seller': $("#srcSellerRedemp_text1").val(),
                'Waperd': $("#srcWaperdRedemp_text1").val(),
                'NoRekeningUSD': $("#maskedRekeningRedempUSD").val(),
                'NoRekeningMC': $("#maskedRekeningRedempMC").val(),
                'Referentor': $("#srcReferentorRedemp_text1").val(),
                'pbDocFCSubscriptionForm': false,
                'pbDocFCDevidentAuthLetter': false,
                'pbDocFCJoinAcctStatementLetter': false,
                'pbDocFCIDCopy': false,
                'pbDocFCOthers': false,
                'pbDocTCSubscriptionForm': false,
                'pbDocTCTermCondition': false,
                'pbDocTCProspectus': false,
                'pbDocTCFundFactSheet': false,
                'pbDocTCOthers': false,
                'pcDocFCOthersList': '',
                'pcDocTCOthersList': ''
            });
            MaintainAllTransaksi(model);
        }
    }

    function MaintainAllTransaksi(model)
    {
        $.ajax({
            type: 'POST',
            url: '/Transaksi/MaintainAllTransaksi',
            data: model,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                if (data.blnResult) {
                    ResetForm();
                    DisableAllForm(false);
                    DisableFormTrxSubs(false);
                    DisableFormTrxRedemp(false);
                    DisableFormTrxRDB(false);
                    swal("Success", data.ErrMsg, "success");
                    if (_strTabName == "SUBS") {
                        //$("#srcNoRefSubs_text1").val(data.strRefID);
                        //cmpsrNoRefSubs.ValidateField();
                    }
                    else if (_strTabName == "REDEMP") {
                        //cmpsrNoRefRedemp.Text1 = dbParam[2].Value.ToString();
                        //cmpsrNoRefRedemp.ValidateField();
                    }
                    else if (_strTabName == "SUBSRDB") {
                        //cmpsrNoRefRDB.Text1 = dbParam[2].Value.ToString();
                        //cmpsrNoRefRDB.ValidateField();
                    }
                    //subRefresh();
                }
                else {
                    if (data.dtError.length > 0) {
                        swal({
                            title: "Failed",
                            text: "Data Transaksi Gagal Disimpan",
                            type: "error",
                            confirmButtonClass: 'btn-danger',
                            confirmButtonText: "OK",
                            closeOnConfirm: true
                        },
                            function (isConfirm) {
                                if (isConfirm) {
                                    var dataSource = new kendo.data.DataSource(
                                        {
                                            data: data.dtError
                                        });
                                    if (_strTabName == "SUBS") {
                                        var Errorgrid = $('#GridErrorSubs').data('kendoGrid');
                                        Errorgrid.setDataSource(dataSource);
                                        Errorgrid.dataSource.pageSize(10);
                                        Errorgrid.select("tr:eq(0)");
                                        $('#ErrorSubsModal').modal('toggle');
                                    }
                                    else if (_strTabName == "REDEMP") {
                                        var Errorgrid = $('#GridErrorRedemp').data('kendoGrid');
                                        Errorgrid.setDataSource(dataSource);
                                        Errorgrid.dataSource.pageSize(10);
                                        Errorgrid.select("tr:eq(0)");
                                        $('#ErrorRedempModal').modal('toggle');
                                    }
                                }
                            });
                    }
                    else {
                        swal("Warning", data.ErrMsg, "warning");
                    }
                }
            }
        });
    }

    function subCancel() {
        _intType = 0;
        ResetForm();
        //cTransaksi.ClearData();
        DisableAllForm(false);
        DisableFormTrxSubs(false);
        DisableFormTrxRedemp(false);
        DisableFormTrxRDB(false);
        subResetToolBar();
        ResetAllKodeKantor();
    }

    function RefreshNasabahSubs(data) {
        $("#textSIDSubs").val(data.CustomerIdentitas.CIFSID);
        $("#txtUmurSubs").val(data.intUmur);
        $("#textShareHolderIdSubs").val(data.CustomerIdentitas.ShareholderID);
        $("#txtbRiskProfileSubs").val(data.RiskProfileModel.RiskProfile);
        var dtpRiskProfileSubs = new Date(data.RiskProfileModel.LastUpdate);
        $("#dtpRiskProfileSubs").val(dtpRiskProfileSubs.getDate() + '/' + (dtpRiskProfileSubs.getMonth() + 1) + '/' + dtpRiskProfileSubs.getFullYear());
        $("#maskedRekeningSubs").val(data.CustomerIdentitas.AccountId);
        $("#textNamaRekeningSubs").val(data.CustomerIdentitas.AccountName);
        $("#maskedRekeningSubsUSD").val(data.CustomerIdentitas.AccountIdUSD);
        $("#textNamaRekeningSubsUSD").val(data.CustomerIdentitas.AccountNameUSD);
        $("#maskedRekeningSubsMC").val(data.CustomerIdentitas.AccountIdMC);
        $("#textNamaRekeningSubsMC").val(data.CustomerIdentitas.AccountNameMC);
    }

    function RefreshSubscription(data) {
        $("#textSIDSubs").val(data.CustomerIdentitas.CIFSID);
        $("#txtUmurSubs").val(data.TransactionSubsDetail.Umur);
        $("#textShareHolderIdSubs").val(data.CustomerIdentitas.ShareholderID);
        $("#txtbRiskProfileSubs").val(data.RiskProfileModel.RiskProfile);
        var dtpRiskProfileSubs = new Date(data.RiskProfileModel.LastUpdate);
        $("#dtpRiskProfileSubs").val(dtpRiskProfileSubs.getDate() + '/' + (dtpRiskProfileSubs.getMonth() + 1) + '/' + dtpRiskProfileSubs.getFullYear());
        $("#maskedRekeningSubs").val(data.CustomerIdentitas.AccountId);
        $("#textNamaRekeningSubs").val(data.CustomerIdentitas.AccountName);
        $("#maskedRekeningSubsUSD").val(data.CustomerIdentitas.AccountIdUSD);
        $("#textNamaRekeningSubsUSD").val(data.CustomerIdentitas.AccountNameUSD);
        $("#maskedRekeningSubsMC").val(data.CustomerIdentitas.AccountIdMC);
        $("#textNamaRekeningSubsMC").val(data.CustomerIdentitas.AccountNameMC);
        $("#txtbInputterSubs").val(data.TransactionSubsDetail.Inputter);
        $("#srcSellerSubs_text1").val(data.TransactionSubsDetail.Seller);
        $("#srcWaperdSubs_text1").val(data.TransactionSubsDetail.Waperd);
        $("#textExpireWaperdSubs").val(data.TransactionSubsDetail.Inputter);
        $("#srcReferentorSubs_text1").val(data.TransactionSubsDetail.Referentor);

        ValidateReferentor($("#srcReferentorSubs_text1").val(), function (output) {
            $("#srcReferentorSubs_text2").val(output);
        });

        ValidateReferentor($("#srcSellerSubs_text1").val(), function (output) {
            $("#srcSellerSubs_text2").val(output);
        });

        var dataSource = new kendo.data.DataSource(
            {
                data: data.ListSubscription
            });
        var Subsgrid = $('#dataGridViewSubs').data('kendoGrid');
        Subsgrid.setDataSource(dataSource);
        Subsgrid.dataSource.pageSize(15);
        Subsgrid.dataSource.page(1);
        Subsgrid.select("tr:eq(0)");

    }

    function RefreshNasabahRedemp(data)
    {
        $("#textSIDRedemp").val(data.CustomerIdentitas.CIFSID);
        $("#txtUmurRedemp").val(data.intUmur);
        $("#textShareHolderIdRedemp").val(data.CustomerIdentitas.ShareholderID);
        $("#txtbRiskProfileRedemp").val(data.RiskProfileModel.RiskProfile);
        var dtpRiskProfileRedemp = new Date(data.RiskProfileModel.LastUpdate);
        $("#dtpRiskProfileRedemp").val(dtpRiskProfileRedemp.getDate() + '/' + (dtpRiskProfileRedemp.getMonth() + 1) + '/' + dtpRiskProfileRedemp.getFullYear());
        $("#maskedRekeningRedemp").val(data.CustomerIdentitas.AccountId);
        $("#textNamaRekeningRedemp").val(data.CustomerIdentitas.AccountName);
        $("#maskedRekeningRedempUSD").val(data.CustomerIdentitas.AccountIdUSD);
        $("#textNamaRekeningRedempUSD").val(data.CustomerIdentitas.AccountNameUSD);
        $("#maskedRekeningRedempMC").val(data.CustomerIdentitas.AccountIdMC);
        $("#textNamaRekeningRedempMC").val(data.CustomerIdentitas.AccountNameMC);
    } 

    function RefreshRedemption(data) {
        $("#textSIDRedemp").val(data.CustomerIdentitas.CIFSID);
        $("#txtUmurRedemp").val(data.TransactionSubsDetail.Umur);
        $("#textShareHolderIdRedemp").val(data.CustomerIdentitas.ShareholderID);
        $("#txtbRiskProfileRedemp").val(data.RiskProfileModel.RiskProfile);
        var dtpRiskProfileRedemp = new Date(data.RiskProfileModel.LastUpdate);
        $("#dtpRiskProfileRedemp").val(dtpRiskProfileRedemp.getDate() + '/' + (dtpRiskProfileRedemp.getMonth() + 1) + '/' + dtpRiskProfileRedemp.getFullYear());
        $("#maskedRekeningRedemp").val(data.CustomerIdentitas.AccountId);
        $("#textNamaRekeningRedemp").val(data.CustomerIdentitas.AccountName);
        $("#maskedRekeningRedempUSD").val(data.CustomerIdentitas.AccountIdUSD);
        $("#textNamaRekeningRedempUSD").val(data.CustomerIdentitas.AccountNameUSD);
        $("#maskedRekeningRedempMC").val(data.CustomerIdentitas.AccountIdMC);
        $("#textNamaRekeningRedempMC").val(data.CustomerIdentitas.AccountNameMC);

        var dataSource = new kendo.data.DataSource(
            {
                data: data.ListRedemption
            });
        var Redempgrid = $('#dataGridViewRedemp').data('kendoGrid');
        Redempgrid.setDataSource(dataSource);
        Redempgrid.dataSource.page(1);
        Redempgrid.select("tr:eq(0)");

        $("#txtbInputterRedemp").val(data.TransactionSubsDetail.Inputter);
        $("#srcSellerRedemp_text1").val(data.TransactionSubsDetail.Seller);
        $("#srcWaperdRedemp_text1").val(data.TransactionSubsDetail.Waperd);
        $("#srcReferentorRedemp_text1").val(data.TransactionSubsDetail.Referentor);

        ValidateReferentor($("#srcSellerRedemp_text1").val(), function (output) {
            $("#srcSellerRedemp_text2").val(output);
        });

        ValidateReferentor($("#srcReferentorRedemp_text1").val(), function (output) {
            $("#srcReferentorRedemp_text2").val(output);
        });
    }

    function RefreshRDB(data) {
        $("#textSIDRDB").val(data.CustomerIdentitas.CIFSID);
        $("#txtUmurRDB").val(data.TransactionSubsDetail.Umur);
        $("#textShareHolderIdRDB").val(data.CustomerIdentitas.ShareholderID);
        $("#txtbRiskProfileRDB").val(data.RiskProfileModel.RiskProfile);
        var dateLast = new Date(data.RiskProfileModel.LastUpdate);
        $("#dtpRiskProfileRDB").val(dateLast.getDate() + '/' + (dateLast.getMonth() + 1) + '/' + dateLast.getFullYear());
        $("#maskedRekeningRDB").val(data.CustomerIdentitas.AccountId);
        $("#textNamaRekeningRDB").val(data.CustomerIdentitas.AccountName);
        $("#maskedRekeningRDBUSD").val(data.CustomerIdentitas.AccountIdUSD);
        $("#textNamaRekeningRDBUSD").val(data.CustomerIdentitas.AccountNameUSD);
        $("#maskedRekeningRDBMC").val(data.CustomerIdentitas.AccountIdMC);
        $("#textNamaRekeningRDBMC").val(data.CustomerIdentitas.AccountNameMC);

        var dataSource = new kendo.data.DataSource(
            {
                data: data.ListSubsRDB
            });
        var RDBgrid = $('#dataGridViewRDB').data('kendoGrid');
        RDBgrid.setDataSource(dataSource);
        RDBgrid.dataSource.page(1);
        RDBgrid.select("tr:eq(0)");

        $("#txtbInputterRDB").val(data.TransactionSubsDetail.Inputter);
        $("#srcSellerRDB_text1").val(data.TransactionSubsDetail.Seller);
        $("#srcWaperdRDB_text1").val(data.TransactionSubsDetail.Waperd);
        $("#ReferrantorIdRDB").val(data.TransactionSubsDetail.Referentor);

        ValidateReferentor($("#srcSellerRDB_text1").val(), function (output) {
            $("#srcSellerRDB_text2").val(output);
        });

        ValidateReferentor($("#ReferrantorIdRDB").val(), function (output) {
            $("#ReferrantorNameRDB").val(output);
        });

    }

    function RefreshSwc(data) {
        $("#textSIDSwc").val(data.CustomerIdentitas.CIFSID);
        $("#txtUmurSwc").val(data.CustomerIdentitas.Umur);
        $("#textShareHolderIdSwc").val(data.CustomerIdentitas.ShareholderID);
        $("#txtbRiskProfileSwc").val(data.RiskProfileModel.RiskProfile);
        var dateLast = new Date(data.RiskProfileModel.LastUpdate);
        $("#dtpRiskProfileSwc").val(dateLast.getDate() + '/' + (dateLast.getMonth() + 1) + '/' + dateLast.getFullYear());
        $("#maskedRekeningSwc").val(data.CustomerIdentitas.AccountId);
        $("#textNamaRekeningSwc").val(data.CustomerIdentitas.AccountName);
        $("#maskedRekeningSwcUSD").val(data.CustomerIdentitas.AccountIdUSD);
        $("#textNamaRekeningSwcUSD").val(data.CustomerIdentitas.AccountNameUSD);
        $("#maskedRekeningSwcMC").val(data.CustomerIdentitas.AccountIdMC);
        $("#textNamaRekeningSwcMC").val(data.CustomerIdentitas.AccountNameMC);
        $("#textNoTransaksiSwc").val(data.TransactionSwitching.TranCode);
        var dateTglTransaksiSwc = new Date(data.TransactionSwitching.TranDate);
        $("#dateTglTransaksiSwc").val(dateTglTransaksiSwc.getDate() + '/' + (dateTglTransaksiSwc.getMonth() + 1) + '/' + dateTglTransaksiSwc.getFullYear());

        $("#srcProductSwcOut_text1").val(data.TransactionSwitching.srcProductSwcOut_text1);
        ValidateProduk($("#srcProductSwcOut_text1").val(), function (output) {
            $("#srcProductSwcOut_text2").val(output[0].ProdName);
            $("#srcClientSwcOut_text1").val(data.TransactionSwitching.srcClientSwcOut_text1);
            ValidateClient($("#srcClientSwcOut_text1").val(), output[0].ProdId, function (result) {
                $("#srcClientSwcOut_text2").val(result);
            });
        });
        $("#srcProductSwcIn_text1").val(data.TransactionSwitching.srcProductSwcIn_text1);
        $("#srcClientSwcIn_text1").val(data.TransactionSwitching.srcClientSwcIn_text1);
        $('#checkPhoneOrderSwc').prop('checked', data.PhoneOrder);
        $('#checkFeeEditSwc').prop('checked', data.IsFeeEdit);
        $("#RedempSwc").val(data.TransactionSwitching.TranUnit);
        $("#MoneyFeeSwc").val(data.TransactionSwitching.SwitchingFee);
        $("#PercentageFeeSwc").val(data.TransactionSwitching.Percentage);
        $("#currFeeSwc").text(data.TransactionSwitching.TranCCY);

        $("#txtbInputterSwc").val(data.TransactionSwitching.Inputter);
        $("#srcSellerSwc_text1").val(data.TransactionSwitching.Seller);
        $("#srcWaperdSwc_text1").val(data.TransactionSwitching.Waperd);
        $("#srcReferentorSwc_text1").val(data.TransactionSwitching.Referentor);

        ValidateReferentor($("#srcSellerSwc_text1").val(), function (output) {
            $("#srcSellerSwc_text2").val(output);
        });

        ValidateReferentor($("#srcReferentorSwc_text1").val(), function (output) {
            $("#srcReferentorSwc_text2").val(output);
        });
    }

function RefreshSwcRDB(data) {
    $("#textSIDSwcRDB").val(data.CustomerIdentitas.CIFSID);
    $("#txtUmurSwcRDB").val(data.CustomerIdentitas.Umur);
    $("#textShareHolderIdSwcRDB").val(data.CustomerIdentitas.ShareholderID);
    $("#txtbRiskProfileSwcRDB").val(data.RiskProfileModel.RiskProfile);
    var dateLast = new Date(data.RiskProfileModel.LastUpdate);
    $("#dtpRiskProfileSwcRDB").val(dateLast.getDate() + '/' + (dateLast.getMonth() + 1) + '/' + dateLast.getFullYear());
    $("#maskedRekeningSwcRDB").val(data.CustomerIdentitas.AccountId);
    $("#textNamaRekeningSwcRDB").val(data.CustomerIdentitas.AccountName);
    $("#maskedRekeningSwcRDBUSD").val(data.CustomerIdentitas.AccountIdUSD);
    $("#textNamaRekeningSwcRDBUSD").val(data.CustomerIdentitas.AccountNameUSD);
    $("#maskedRekeningSwcRDBMC").val(data.CustomerIdentitas.AccountIdMC);
    $("#textNamaRekeningSwcRDBMC").val(data.CustomerIdentitas.AccountNameMC);

    $("#textNoTransaksiSwcRDB").val(data.TransactionSwitchingRDB.TranCode);
    var dateTglTransaksiSwcRDB = new Date(data.TransactionSwitchingRDB.TranDate);
    $("#dateTglTransaksiSwcRDB").val(dateTglTransaksiSwcRDB.getDate() + '/' + (dateTglTransaksiSwcRDB.getMonth() + 1) + '/' + dateTglTransaksiSwcRDB.getFullYear());


    $("#srcProductSwcRDBOut_text1").val(data.TransactionSwitchingRDB.srcProductSwcOut_text1);
    ValidateProduk($("#srcProductSwcRDBOut_text1").val(), function (output) {
        $("#srcProductSwcRDBOut_text2").val(output[0].ProdName);
        $("#srcClientSwcRDBOut_text1").val(data.TransactionSwitchingRDB.srcClientSwcOut_text1);
        ValidateClient($("#srcClientSwcRDBOut_text1").val(), output[0].ProdId, function (result) {
            $("#srcClientSwcRDBOut_text2").val(result);
        });
    });
    $("#srcProductSwcRDBIn_text1").val(data.TransactionSwitchingRDB.srcProductSwcIn_text1);
    ValidateProduk($("#srcProductSwcRDBIn_text1").val(), function (output) {
        $("#srcProductSwcRDBIn_text2").val(output[0].ProdName);
        $("#srcClientSwcRDBIn_text1").val(data.TransactionSwitchingRDB.srcClientSwcIn_text1);
        ValidateClient($("#srcClientSwcRDBIn_text1").val(), output[0].ProdId, function (result) {
            $("#srcClientSwcRDBIn_text2").val(result);
        });
    });

    $('#checkPhoneOrderSwcRDB').prop('checked', data.PhoneOrder);
    $('#checkFeeEditSwcRDB').prop('checked', data.IsFeeEdit);
    $("#RedempSwcRDB").val(data.TransactionSwitchingRDB.TranUnit);
    $("#MoneyFeeSwcRDB").val(data.TransactionSwitchingRDB.SwitchingFee);
    $("#PercentageFeeSwcRDB").val(data.TransactionSwitchingRDB.Percentage);
    $("#currFeeSwcRDB").text(data.TransactionSwitchingRDB.TranCCY);
    $("#JangkaWktSwcRDB").val(data.TransactionSwitchingRDB.JangkaWaktu);
    var dtJatuhTempoSwcRDB = new Date(data.TransactionSwitchingRDB.JatuhTempo);
    $("#dtJatuhTempoSwcRDB").val(dtJatuhTempoSwcRDB.getDate() + '/' + (dtJatuhTempoSwcRDB.getMonth() + 1) + '/' + dtJatuhTempoSwcRDB.getFullYear());

    $("#cmbAutoRedempSwcRDB").data('kendoDropDownList').value(data.TransactionSwitchingRDB.AutoRedemption);
    $("#cmbAsuransiSwcRDB").data('kendoDropDownList').value(data.TransactionSwitchingRDB.Asuransi);


    $("#txtbInputterSwcRDB").val(data.TransactionSwitchingRDB.Inputter);
    $("#srcSellerSwcRDB_text1").val(data.TransactionSwitchingRDB.Seller);
    $("#srcWaperdSwcRDB_text1").val(data.TransactionSwitchingRDB.Waperd);
    $("#srcReferentorSwcRDB_text1").val(data.TransactionSwitchingRDB.Referentor);

    ValidateReferentor($("#srcSellerSwcRDB_text1").val(), function (output) {
        $("#srcSellerSwcRDB_text2").val(output);
    });

    ValidateReferentor($("#srcReferentorSwc_text1").val(), function (output) {
        $("#srcReferentorSwcRDB_text2").val(output);
    });
}

function RefreshBooking(data) {
    $("#textSIDBooking").val(data.CustomerIdentitas.CIFSID);
    $("#txtUmurBooking").val(data.CustomerIdentitas.Umur);
    $("#textShareHolderIdBooking").val(data.CustomerIdentitas.ShareholderID);
    $("#txtbRiskProfileBooking").val(data.RiskProfileModel.RiskProfile);
    var dateLast = new Date(data.RiskProfileModel.LastUpdate);
    $("#dtpRiskProfileBooking").val(dateLast.getDate() + '/' + (dateLast.getMonth() + 1) + '/' + dateLast.getFullYear());
    $("#maskedRekeningBooking").val(data.CustomerIdentitas.AccountId);
    $("#textNamaRekeningBooking").val(data.CustomerIdentitas.AccountName);
    $("#maskedRekeningBookingUSD").val(data.CustomerIdentitas.AccountIdUSD);
    $("#textNamaRekeningBookingUSD").val(data.CustomerIdentitas.AccountNameUSD);
    $("#maskedRekeningBookingMC").val(data.CustomerIdentitas.AccountIdMC);
    $("#textNamaRekeningBookingMC").val(data.CustomerIdentitas.AccountNameMC);

    $("#textNoTransaksiBooking").val(data.TransactionBooking.BookingCode);
    var dateTglTransaksiBooking = new Date(data.TransactionBooking.BookingDate);
    $("#dateTglTransaksiBooking").val(dateTglTransaksiBooking.getDate() + '/' + (dateTglTransaksiBooking.getMonth() + 1) + '/' + dateTglTransaksiBooking.getFullYear());
    $("#srcProductBooking_text1").val(data.TransactionBooking.ProdCode);
    ValidateProduk($("#srcProductBooking_text1").val(), function (output) {
        $("#srcProductBooking_text2").val(output[0].ProdName);
    });
    $("#srcClientBooking_text1").val(data.TransactionBooking.ClientCode);
    $("#srcCurrencyBooking_text1").val(data.TransactionBooking.BookingCCY);
    ValidateCurrency($("#srcCurrencyBooking_text1").val(), function (output) {
        $("#srcCurrencyBooking_text2").val(output);
    });
    $("#MoneyNomBooking").val(data.TransactionBooking.BookingAmt);
    $("#MoneyFeeBooking").val(data.TransactionBooking.SubcFee);
    $("#currFeeBook").text(data.TransactionBooking.BookingCCY);
    $("#PercentageFeeBooking").val(data.TransactionBooking.PercentageFee);
    $("#txtbInputterBooking").val(data.TransactionBooking.Inputter);
    $("#srcSellerBooking_text1").val(data.TransactionBooking.Seller);
    $("#srcWaperdBooking_text1").val(data.TransactionBooking.Waperd);
    $("#srcReferentorBooking_text1").val(data.TransactionBooking.Referentor);
    ValidateReferentor($("#srcSellerBooking_text1").val(), function (output) {
        $("#srcSellerBooking_text2").val(output);
    });
    ValidateReferentor($("#srcReferentorBooking_text1").val(), function (output) {
        $("#srcReferentorBooking_text2").val(output);
    });
}

    function GetKodeKantor() {
    ValidasiKodeKantor(strBranch, function (output) {
        if (output) {
            $("#srcOfficeSubs_text1").val(strBranch);
            $("#srcOfficeRedemp_text1").val(strBranch);
            $("#srcOfficeRDB_text1").val(strBranch);
            $("#srcOfficeSwc_text1").val(strBranch);
            $("#srcOfficeSwcRDB_text1").val(strBranch);
            $("#srcOfficeBooking_text1").val(strBranch);

            ValidateOffice(strBranch, function (res) {
                $("#srcOfficeSubs_text2").val(res);
                $("#srcOfficeRedemp_text2").val(res);
                $("#srcOfficeRDB_text2").val(res);
                $("#srcOfficeSwc_text2").val(res);
                $("#srcOfficeSwcRDB_text2").val(res);
                $("#srcOfficeBooking_text2").val(res);
            });
        } else
            subCancel();
    });
}

function ValidateOffice(OfficeId, result) {
    $.ajax({
        type: 'GET',
        url: '/Global/ValidateOffice',
        data: { Col1: OfficeId, Col2: '', Validate: 1 },
        success: function (data) {
            if (data.length != 0) {
                result(data[0].OfficeName);
            } else {
                result("");
            }
        },
        error: function (error) {
            result("");
        }
    });
}

function ValidateReferentor(ReferentorID, result) {
    $.ajax({
        type: 'GET',
        url: '/Global/ValidateReferentor',
        data: { Col1: ReferentorID, Col2: '', Validate: 1 },
        success: function (data) {
            if (data.length != 0) {
                result(data[0].NAME);
            }
            else {
                result('');
            }
        }
    });
}

    function ValidateWaperd(EmployeeId, WaperdNo, DateExpire) {
    $.ajax({
        type: 'GET',
        url: '/Global/ValidateWaperd',
        data: { Col1: EmployeeId, Col2: '', Validate: 1 },
        success: function (data) {
            if (data.length != 0) {
                WaperdNo(data[0].WaperdNo);
                var dtExpire = new Date(data[0].DateExpire);
                DateExpire(dtExpire.getDate() + '/' + (dtExpire.getMonth() + 1) + '/' + dtExpire.getFullYear());
            }
            else {
                WaperdNo('');
                DateExpire('');
            }
                
        }
    });
}

function ValidateProduk(ProductCode, result) {
    $.ajax({
        type: 'GET',
        url: '/Global/ValidateProduct',
        data: { Col1: ProductCode, Col2: '', Validate: 1 },
        success: function (data) {
            if (data.length != 0) {
                result(data);
            } else {
                result('');
            }
        }
    });
}

function ValidateClient(ClientCode, ProdId, result) {
    if (ClientCode != '') {
        $.ajax({
            type: 'GET',
            url: '/Global/ValidateClient',
            data: { Col1: ClientCode, Col2: '', Validate: 1, ProdId: ProdId },
            success: function (data) {
                if (data.length != 0) {
                    result(data[0].ClientName);
                } else {
                    result('');
                }
            }
        });
    }
}

    function ValidateCurrency(CurrCode, result) {
        if (CurrCode != '') {
            $.ajax({
                type: 'GET',
                url: '/Global/ValidateCurrency',
                data: { Col1: CurrCode, Col2: '', Validate: 1 },
                success: function (data) {
                    if (data.length != 0) {
                        result(data[0].CurrencyName);
                    } else {
                        result('');
                    }
                }
            });
        }
}

function DisableAllForm(isEnabled) {
    DisableFormSubs(isEnabled);
    DisableFormRedemp(isEnabled);
    DisableFormRDB(isEnabled);
    DisableFormSwc(isEnabled);
    DisableFormSwcRDB(isEnabled);
    DisableFormBooking(isEnabled);
    //objFormDocument.SetReadOnly(!isEnabled);
}

function DisableFormSubs(isEnabled) {
    $("#srcOfficeSubs_text1").prop('disabled', true);
    $("#srcOfficeSubs").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

    $("#srcWaperdSubs_text1").prop('disabled', true);
    $("#srcWaperdSubs").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

    $("#srcNoRefSubs_text1").prop('disabled', isEnabled);
    $("#srcCIFSubs_text1").prop('disabled', isEnabled);
    $("#srcSellerSubs_text1").prop('disabled', isEnabled);
    $("#srcReferentorSubs_text1").prop('disabled', isEnabled);

    if (!isEnabled) {
        $("#srcNoRefSubs").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        $("#srcCIFSubs").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        $("#srcSellerSubs").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcReferentorSubs").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
    }
    else {
        $("#srcNoRefSubs").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcCIFSubs").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcSellerSubs").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        $("#srcReferentorSubs").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
    }
    document.getElementById("btnDocumentSubs").disabled = !isEnabled;

    $("#textSIDSubs").prop('disabled', true);
    $("#txtUmurSubs").prop('disabled', true);
    $("#textShareHolderIdSubs").prop('disabled', true);
    $("#textNamaRekeningSubs").prop('disabled', true);
    $("#maskedRekeningSubs").prop('disabled', true);
    $("#maskedRekeningSubsUSD").prop('disabled', true);
    $("#maskedRekeningSubsMC").prop('disabled', true);
    $("#txtbInputterSubs").prop('disabled', true);
    $("#textExpireWaperdSubs").prop('disabled', true);
}

function DisableFormTrxSubs(isEnabled) {
    $("#textNoTransaksiSubs").prop('disabled', true);
    $("#dateTglTransaksiSubs").prop('disabled', true);

    $("#srcCurrencySubs_text1").prop('disabled', true);
    $("#srcCurrenySubs").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

    $("#srcProductSubs_text1").prop('disabled', !isEnabled);
    $("#srcClientSubs_text1").prop('disabled', !isEnabled);
    if (isEnabled) {
        $("#srcProductSubs").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        $("#srcClientSubs").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
    } else {
        $("#srcProductSubs").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcClientSubs").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
    }

    $("#MoneyNomSubs").prop('disabled', !isEnabled);
    $("#checkPhoneOrderSubs").prop('disabled', true);

    if ((isEnabled == true) && ($("#srcCIFSubs_text1").val() != "")) {
        //if (GlobalFunctionCIF.CekCIFProductFacility(cmpsrCIFSubs.Text1)) {
        //    checkPhoneOrderBooking.Enabled = true;
        //}
    }
    $("#checkFullAmtSubs").prop('disabled', !isEnabled);
    $("#checkFeeEditSubs").prop('disabled', !isEnabled);

    document.getElementById("btnAddSubs").disabled = !isEnabled;
    document.getElementById("btnEditSubs").disabled = !isEnabled;
    $("#_ComboJenisSubs").data('kendoDropDownList').enable(false);
    $("#MoneyFeeSub").prop('disabled', true);
    $("#PercentageFeeSubs").prop('disabled', true);
}

function DisableFormRedemp(isEnabled) {
    $("#srcOfficeRedemp_text1").prop('disabled', true);
    $("#srcOfficeRedemp").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

    $("#srcWaperdRedemp_text1").prop('disabled', true);
    $("#srcWaperdRedemp").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

    $("#srcNoRefRedemp_text1").prop('disabled', isEnabled);
    $("#srcCIFRedemp_text1").prop('disabled', isEnabled);
    $("#srcSellerRedemp_text1").prop('disabled', isEnabled);
    $("#srcReferentorRedemp_text1").prop('disabled', isEnabled);
    if (!isEnabled) {
        $("#srcNoRefRedemp").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        $("#srcCIFRedemp").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        $("#srcSellerRedemp").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcReferentorRedemp").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
    }
    else {
        $("#srcNoRefRedemp").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcCIFRedemp").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcSellerRedemp").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');

        $("#srcReferentorRedemp").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
    }
    document.getElementById("btnDokumenRedemp").disabled = !isEnabled;

    $("#textSIDRedemp").prop('disabled', true);
    $("#txtUmurRedemp").prop('disabled', true);
    $("#textShareHolderIdRedemp").prop('disabled', true);
    $("#textRekeningRedemp").prop('disabled', true);
    $("#maskedRekeningRedemp").prop('disabled', true);
    $("#maskedRekeningRedempUSD").prop('disabled', true);
    $("#maskedRekeningRedempMC").prop('disabled', true);
    $("#txtbInputterRedemp").prop('disabled', true);
    $("#textExpireWaperdRedemp").prop('disabled', true);
}

function DisableFormTrxRedemp(isEnabled) {
    $("#textNoTransaksiRedemp").prop('disabled', true);
    $("#dateTglTransaksiRedemp").prop('disabled', true);

    $("#CurrCodeRedemp").prop('disabled', true);
    $("#srcCurrenyRedemp").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

    $("#srcProductRedemp_text1").prop('disabled', !isEnabled);
    $("#srcClientRedemp_text1").prop('disabled', !isEnabled);
    if (isEnabled) {
        $("#srcProductRedemp").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        $("#srcClientRedemp").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
    } else {
        $("#srcProductRedemp").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcClientRedemp").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
    }
    $("#OutstandingUnitRedemp").prop('disabled', true);
    $("#RedempUnit").prop('disabled', !isEnabled);
    $("#checkPhoneOrderRedemp").prop('disabled', true);

    if ((isEnabled == true) && ($("#srcCIFRedemp_text1").val() != "")) {
        //if (GlobalFunctionCIF.CekCIFProductFacility(cmpsrCIFRedemp.Text1)) {
        //    checkPhoneOrderBooking.Enabled = true;
        //}
    }
    $("#checkAll").prop('disabled', !isEnabled);
    $("#checkFeeEditRedemp").prop('disabled', !isEnabled);

    document.getElementById("btnAddRedemp").disabled = !isEnabled;
    document.getElementById("btnEditRedemp").disabled = !isEnabled;
    $("#_ComboJenisRedemp").data('kendoDropDownList').enable(false);
    $("#MoneyFeeRedemp").prop('disabled', true);
    $("#PercentageFeeRedemp").prop('disabled', true);
}

function DisableFormRDB(isEnabled) {
    $("#srcOfficeRDB_text1").prop('disabled', true);
    $("#srcOfficeRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

    $("#srcWaperdRDB_text1").prop('disabled', true);
    $("#srcWaperdRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

    $("#srcNorefRDB_text1").prop('disabled', isEnabled);
    $("#srcCIFRDB_text1").prop('disabled', isEnabled);
    $("#srcSellerRDB_text1").prop('disabled', isEnabled);
    $("#srcReferentorRDB_text1").prop('disabled', isEnabled);
    if (!isEnabled) {
        $("#srcNoRefRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        $("#srcCIFRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        $("#srcSellerRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcReferentorRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
    }
    else {
        $("#srcNoRefRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcCIFRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcSellerRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');

        $("#srcReferentorRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
    }
    document.getElementById("btnDokumenRDB").disabled = !isEnabled;

    $("#textSIDRDB").prop('disabled', true);
    $("#txtUmurRDB").prop('disabled', true);
    $("#textShareHolderIdRDB").prop('disabled', true);
    $("#textRekeningRDB").prop('disabled', true);
    $("#maskedRekeningRDB").prop('disabled', true);
    $("#maskedRekeningRDBUSD").prop('disabled', true);
    $("#maskedRekeningRDBMC").prop('disabled', true);
    $("#txtbInputterRDB").prop('disabled', true);
    $("#textExpireWaperdRDB").prop('disabled', true);
}

function DisableFormTrxRDB(isEnabled) {
    $("#textNoTransaksiRDB").prop('disabled', true);
    $("#dateTglTransaksiRDB").prop('disabled', true);

    $("#srcCurrenyRDB_text1").prop('disabled', true);
    $("#srcCurrenyRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

    $("#srcProductRDB_text1").prop('disabled', !isEnabled);
    $("#srcClientRDB_text1").prop('disabled', !isEnabled);
    if (isEnabled) {
        $("#srcProductRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        $("#srcClientRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
    } else {
        $("#srcProductRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcClientRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
    }
    $("#MoneyNomRDB").prop('disabled', !isEnabled);
    $("#checkPhoneOrderRDB").prop('disabled', true);

    if ((isEnabled == true) && ($("#srcCIFRDB_text1").val() != "")) {
        //if (GlobalFunctionCIF.CekCIFProductFacility(cmpsrCIFRDB.Text1)) {
        //    checkPhoneOrderBooking.Enabled = true;
        //}
    }
    $("#cmbAutoRedempRDB").prop('disabled', !isEnabled);
    $("#cmbAsuransiRDB").prop('disabled', !isEnabled);

    document.getElementById("btnAddRDB").disabled = !isEnabled;
    document.getElementById("btnEditRDB").disabled = !isEnabled;

    $("#JangkaWktRDB").prop('disabled', !isEnabled);
    $("#dtJatuhTempoRDB").prop('disabled', true);
    $("#cmbFrekPendebetanRDB").prop('disabled', !isEnabled);

    $("#checkFeeEditRDB").prop('disabled', true);
    $("#_ComboJenisRDB").data('kendoDropDownList').enable(false);
    $("#MoneyFeeRDB").prop('disabled', true);
    $("#PercentageFeeRDB").prop('disabled', true);
}

function DisableFormSwc(isEnabled) {
    $("#srcOfficeSwc_text1").prop('disabled', true);
    $("#srcOfficeSwc").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

    $("#srcWaperdSwc_text1").prop('disabled', true);
    $("#srcWaperdSwc").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

    $("#srcNoRefSwc_text1").prop('disabled', isEnabled);
    $("#srcCIFSwc_text1").prop('disabled', isEnabled);
    $("#srcSellerSwc_text1").prop('disabled', isEnabled);
    $("#srcReferentorSwc_text1").prop('disabled', isEnabled);
    if (!isEnabled) {
        $("#srcNoRefSwc").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        $("#srcCIFSwc").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        $("#srcSellerSwc").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcReferentorSwc").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
    }
    else {
        $("#srcNoRefSwc").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcCIFSwc").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcSellerSwc").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');

        $("#srcReferentorSwc").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
    }

    $("#checkSwcAll").prop('disabled', !isEnabled);
    $("#checkPhoneOrderSwc").prop('disabled', !isEnabled);
    $("#checkFeeEditSwc").prop('disabled', !isEnabled);
    $("#RedempSwc").prop('disabled', !isEnabled);
    $("#PercentageFeeSwc").prop('disabled', true);

    if (_intType == 2) {
        $("#srcNoRefSwc_text1").prop('disabled', true);
        $("#srcNoRefSwc").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcCIFSwc_text1").prop('disabled', true);
        $("#srcCIFSwc").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#checkPhoneOrderSwc").prop('disabled', false);
        $("#checkFeeEditSwc").prop('disabled', false);
        $("#RedempSwc").prop('disabled', true);
        $("#checkSwcAll").prop('disabled', true);
        if ($('#checkFeeEditSwc').prop('checked') == true) {
            $("#PercentageFeeSwc").prop('disabled', false);
        }
        else {
            $("#PercentageFeeSwc").prop('disabled', true);
        }
    }

    $("#maskedRekeningSwc").prop('disabled', true);
    $("#maskedRekeningSwcUSD").prop('disabled', true);
    $("#maskedRekeningSwcMC").prop('disabled', true);
    document.getElementById("btnDokumenSwc").disabled = !isEnabled;

    $("#textSIDSwc").prop('disabled', true);
    $("#txtUmurSwc").prop('disabled', true);
    $("#textShareHolderIdSwc").prop('disabled', true);
    $("#textRekeningSwc").prop('disabled', true);

    $("#textNoTransaksiSwc").prop('disabled', !isEnabled);
    $("#dateTglTransaksiSwc").prop('disabled', true);

    $("#srcProductSwcOut_text1").prop('disabled', !isEnabled);
    $("#srcClientSwcOut_text1").prop('disabled', !isEnabled);
    $("#srcProductSwcIn_text1").prop('disabled', !isEnabled);
    if (isEnabled) {
        $("#srcProductSwcOut").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        $("#srcClientSwcOut").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        $("#srcProductSwcIn").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
    }
    else {
        $("#srcProductSwcOut").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcClientSwcOut").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcProductSwcIn").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
    }
    $("#srcClientSwcIn_text1").prop('disabled', true);
    $("#srcClientSwcIn").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

    $("#MoneyFeeSwc").prop('disabled', true);
    $("#txtbInputterSwc").prop('disabled', true);
    $("#textExpireWaperdSwc").prop('disabled', true);
}

function DisableFormSwcRDB(isEnabled) {
    $("#srcOfficeSwcRDB_text1").prop('disabled', true);
    $("#srcOfficeSwcRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

    $("#srcWaperdSwcRDB_text1").prop('disabled', true);
    $("#srcWaperdSwcRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

    $("#RefIDSwcRDB").prop('disabled', isEnabled);
    $("#srcCIFSwcRDB_text1").prop('disabled', isEnabled);
    $("#srcSellerSwcRDB_text1").prop('disabled', isEnabled);
    $("#srcReferentorSwcRDB_text1").prop('disabled', isEnabled);
    if (!isEnabled) {
        $("#srcNoRefSwcRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        $("#srcCIFSwcRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        $("#srcSellerSwcRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcReferentorSwcRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
    }
    else {
        $("#srcNoRefSwcRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcCIFSwcRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcSellerSwcRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');

        $("#srcReferentorSwcRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
    }

    $("#checkPhoneOrderSwcRDB").prop('disabled', !isEnabled);
    $("#checkcheckFeeEditSwcRDB").prop('disabled', !isEnabled);
    $("#RedempSwcRDB").prop('disabled', !isEnabled);

    if (_intType == 2) {
        $("#RefIDSwcRDB").prop('disabled', true);
        $("#srcNoRefSwcRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcCIFSwcRDB_text1").prop('disabled', true);
        $("#srcCIFSwcRDB").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#checkPhoneOrderSwcRDB").prop('disabled', false);
        $("#checkcheckFeeEditSwcRDB").prop('disabled', false);
        $("#RedempSwcRDB").prop('disabled', true);
    }

    $("#maskedRekeningSwcRDB").prop('disabled', true);
    $("#maskedRekeningSwcRDBUSD").prop('disabled', true);
    $("#maskedRekeningSwcRDBMC").prop('disabled', true);
    document.getElementById("btnDokumenSwcRDB").disabled = !isEnabled;

    $("#textSIDSwcRDB").prop('disabled', true);
    $("#txtUmurSwcRDB").prop('disabled', true);
    $("#textShareHolderIdSwcRDB").prop('disabled', true);
    $("#textRekeningSwcRDB").prop('disabled', true);

    $("#textNoTransaksiSwcRDB").prop('disabled', !isEnabled);
    $("#dateTglTransaksiSwcRDB").prop('disabled', true);

    $("#srcProductSwcRDBOut_text1").prop('disabled', !isEnabled);
    $("#srcClientSwcRDBOut_text1").prop('disabled', !isEnabled);
    $("#srcProductSwcRDBIn_text1").prop('disabled', !isEnabled);
    if (isEnabled) {
        $("#srcProductSwcRDBOut").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        $("#srcClientSwcRDBOut").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        $("#srcProductSwcRDBIn").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
    }
    else {
        $("#srcProductSwcRDBOut").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcClientSwcRDBOut").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcProductSwcRDBIn").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
    }
    $("#srcClientSwcRDBIn_text1").prop('disabled', true);
    $("#srcClientSwcRDBIn").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

    $("#OutstandingUnitSwcRDB").prop('disabled', true);
    $("#JangkaWktSwcRDB").prop('disabled', true);
    $("#dtJatuhTempoSwcRDB").prop('disabled', true);
    $("#cmbFrekPendebetanSwcRDB").prop('disabled', true);
    $("#cmbAutoRedempSwcRDB").prop('disabled', true);
    $("#cmbAsuransiSwcRDB").prop('disabled', true);

    $("#MoneyFeeSwcRDB").prop('disabled', true);
    $("#PercentageFeeSwcRDB").prop('disabled', true);

    $("#txtbInputterSwcRDB").prop('disabled', true);
    $("#textExpireWaperdSwcRDB").prop('disabled', true);
}

function DisableFormBooking(isEnabled) {
    $("#srcOfficeBooking_text1").prop('disabled', true);
    $("#srcOfficeBooking").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

    $("#WaperdNoBooking").prop('disabled', true);
    $("#srcWaperdBooking").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

    $("#RefIDBooking").prop('disabled', isEnabled);
    $("#CIFNoBooking").prop('disabled', isEnabled);
    $("#SellerIdBooking").prop('disabled', isEnabled);
    $("#srcReferentorBooking_text1").prop('disabled', isEnabled);
    if (!isEnabled) {
        $("#srcNoRefBooking").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        $("#srcCIFBooking").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        $("#srcSellerBooking").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcReferentorBooking").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
    }
    else {
        $("#srcNoRefBooking").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcCIFBooking").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#srcSellerBooking").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');

        $("#srcReferentorBooking").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
    }
    document.getElementById("btnDokumenBooking").disabled = !isEnabled;
    $("#checkFeeEditBooking").prop('disabled', true);
    $("#MoneyNomBooking").prop('disabled', !isEnabled);
    if (_intType == 2) {
        $("#RefIDBooking").prop('disabled', true);
        $("#srcNoRefBooking").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        $("#CIFNoBooking").prop('disabled', true);
        $("#srcCIFBooking").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

        $("#MoneyNomBooking").prop('disabled', false);
        $("#checkFeeEditBooking").prop('disabled', true);

    }
    $("#textSIDBooking").prop('disabled', true);
    $("#txtUmurBooking").prop('disabled', true);
    $("#textShareHolderIdBooking").prop('disabled', true);
    $("#textRekeningBooking").prop('disabled', true);

    $("#maskedRekeningBooking").prop('disabled', true);
    $("#maskedRekeningBookingUSD").prop('disabled', true);
    $("#maskedRekeningBookingMC").prop('disabled', true);

    $("#textNoTransaksiBooking").prop('disabled', !isEnabled);
    $("#dateTglTransaksiBooking").prop('disabled', true);

    $("#ClientCodeBooking").prop('disabled', true);
    $("#CurrCodeBooking").prop('disabled', true);
    $("#srcClientBooking").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
    $("#srcCurrencyBooking").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

    $("#ProdCodeBooking").prop('disabled', !isEnabled);
    if (isEnabled) {
        $("#srcProductBooking").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
    }
    else {
        $("#srcProductBooking").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
    }

    $("#checkPhoneOrderBooking").prop('disabled', true);
    $("#_sisaunit").prop('disabled', true);

    $("#_ComboJenisBooking").prop('disabled', true);
    $("#MoneyFeeBooking").prop('disabled', true);
    $("#PercentageFeeBooking").prop('disabled', true);

    $("#txtbInputterBooking").prop('disabled', true);
    $("#textExpireWaperdBooking").prop('disabled', true);
}

function subResetToolBar() {
    if (_strTabName == "SWCRDB") {
        switch (_intType) {
            case 0:
                {
                    document.getElementById("btnRefresh").disabled = false;
                    document.getElementById("btnNew").disabled = false;
                    document.getElementById("btnEdit").disabled = true;
                    document.getElementById("btnSave").disabled = true;
                    document.getElementById("btnCancel").disabled = true;
                    break;
                }
            case 1:
                {
                    document.getElementById("btnRefresh").disabled = true;
                    document.getElementById("btnNew").disabled = true;
                    document.getElementById("btnEdit").disabled = true;
                    document.getElementById("btnSave").disabled = false;
                    document.getElementById("btnCancel").disabled = false;
                    break;
                }
            case 2:
                {
                    document.getElementById("btnRefresh").disabled = true;
                    document.getElementById("btnNew").disabled = true;
                    document.getElementById("btnEdit").disabled = true;
                    document.getElementById("btnSave").disabled = false;
                    document.getElementById("btnCancel").disabled = false;
                    break;
                }
        }
    }
    else if (_strTabName == "BOOK") {
        switch (_intType) {
            case 0:
                {
                    document.getElementById("btnRefresh").disabled = false;
                    document.getElementById("btnNew").disabled = false;
                    document.getElementById("btnEdit").disabled = true;
                    document.getElementById("btnSave").disabled = true;
                    document.getElementById("btnCancel").disabled = true;
                    break;
                }
            case 1:
                {
                    document.getElementById("btnRefresh").disabled = true;
                    document.getElementById("btnNew").disabled = true;
                    document.getElementById("btnEdit").disabled = true;
                    document.getElementById("btnSave").disabled = false;
                    document.getElementById("btnCancel").disabled = false;
                    break;
                }
            case 2:
                {
                    document.getElementById("btnRefresh").disabled = true;
                    document.getElementById("btnNew").disabled = true;
                    document.getElementById("btnEdit").disabled = true;
                    document.getElementById("btnSave").disabled = false;
                    document.getElementById("btnCancel").disabled = false;
                    break;
                }
        }
    }
    else {
        switch (_intType) {
            case 0:
                {
                    document.getElementById("btnRefresh").disabled = false;
                    document.getElementById("btnNew").disabled = false;
                    document.getElementById("btnEdit").disabled = false;
                    document.getElementById("btnSave").disabled = true;
                    document.getElementById("btnCancel").disabled = true;
                    break;
                }
            case 1:
                {
                    document.getElementById("btnRefresh").disabled = true;
                    document.getElementById("btnNew").disabled = true;
                    document.getElementById("btnEdit").disabled = true;
                    document.getElementById("btnSave").disabled = false;
                    document.getElementById("btnCancel").disabled = false;
                    break;
                }
            case 2:
                {
                    document.getElementById("btnRefresh").disabled = true;
                    document.getElementById("btnNew").disabled = true;
                    document.getElementById("btnEdit").disabled = true;
                    document.getElementById("btnSave").disabled = false;
                    document.getElementById("btnCancel").disabled = false;
                    break;
                }
        }
    }
}

function ResetForm() {
    ResetFormSubs();
    ResetFormRedemp();
    ResetFormRDB();
    ResetFormSwc();
    ResetFormSwcRDB();
    ResetFormBooking();

    //REKSA_CIF_ALL
    var urlSubs = '@Html.Raw(Url.Action("SearchCustomerSubs", "Global"))';
    var urlRedemp = '@Html.Raw(Url.Action("SearchCustomerRedemp", "Global"))';
    var urlRDB = '@Html.Raw(Url.Action("SearchCustomerRDB", "Global"))';
    var urlSwc = '@Html.Raw(Url.Action("SearchCustomerSwc", "Global"))';
    var urlSwcRDB = '@Html.Raw(Url.Action("SearchCustomerSwcRDB", "Global"))';
    var urlBooking = '@Html.Raw(Url.Action("SearchCustomerBooking", "Global"))';

    $('#srcCIFSubs').attr('href', urlSubs);
    $('#srcCIFRedemp').attr('href', urlRedemp);
    $('#srcCIFRDB').attr('href', urlRDB);
    $('#srcCIFSwc').attr('href', urlSwc);
    $('#srcCIFSwcRDB').attr('href', urlSwcRDB);
    $('#srcCIFSwcBooking').attr('href', urlBooking);
    //if (objFormDocument != null) objFormDocument.ResetForm();
}

function ResetFormSubs() {
    $('#srcCIFSubs_text1').val('');
    $('#srcCIFSubs_text2').val('');
    $('#srcNoRefSubs_text1').val('');
    $('#srcNoRefSubs_text2').val('');

    $('#textSIDSubs').val('');
    $('#txtUmurSubs').val('');
    $('#textShareHolderIdSubs').val('');
    $('#textNamaRekeningSubs').val('');
    $('#maskedRekeningSubs').val('');
    $('#maskedRekeningSubsUSD').val('');
    $('#maskedRekeningSubsMC').val('');
    $('#txtbRiskProfileSubs').val('');
    $("#dtpRiskProfileSubs").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());
    $("#dateTglTransaksiSubs").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());

    ResetFormTrxSubs();
    $("#dataGridViewSubs").data('kendoGrid').dataSource.data([]);

    $('#txtbInputterSubs').val('');
    $('#srcSellerSubs_text1').val('');
    $('#srcSellerSubs_text2').val('');
    $('#srcWaperdSubs_text1').val('');
    $('#srcWaperdSubs_text2').val('');
    $('#textExpireWaperdSubs').val('');
    $('#srcReferentorSubs_text1').val('');
    $('#srcReferentorSubs_text2').val('');
}

function ResetFormTrxSubs() {
    _StatusTransaksiSubs = "";

    $('#textNoTransaksiSubs').val('');
    $('#srcProductSubs_text1').val('');
    $('#srcProductSubs_text2').val('');
    $('#srcClientSubs_text1').val('');
    $('#srcClientSubs_text2').val('');
    $('#srcCurrencySubs_text1').val('');
    $('#srcCurrencySubs_text2').val('');
    $('#MoneyNomSubs').val(0);
    $('#checkPhoneOrderSubs').prop('checked', false);
    $('#checkFullAmtSubs').prop('checked', true);
    $('#checkFeeEditSubs').prop('checked', false);
    $('#_ComboJenisSubs').val('');
    $('#MoneyFeeSubs').val(0);
    $('#labelFeeCurrencySubs').val('');
    $('#PercentageFeeSubs').val(0);
}

function ResetFormRedemp() {
    $('#srcCIFRedemp_text1').val('');
    $('#srcCIFRedemp_text2').val('');
    $('#srcNoRefRedemp_text1').val('');
    $('#srcNoRefRedemp_text2').val('');

    $('#textSIDRedemp').val('');
    $('#txtUmurRedemp').val('');
    $('#textShareHolderIdRedemp').val('');
    $('#textNamaRekeningRedemp').val('');
    $('#maskedRekeningRedemp').val('');
    $('#maskedRekeningRedempUSD').val('');
    $('#maskedRekeningRedempMC').val('');
    $('#txtbRiskProfileRedemp').val('');
    $("#dtpRiskProfileRedemp").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());
    $("#dateTglTransaksiRedemp").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());

    ResetFormTrxRedemp();
    $("#dataGridViewRedemp").data('kendoGrid').dataSource.data([]);

    $('#txtbInputterRedemp').val('');
    $('#srcSellerRedemp_text1').val('');
    $('#srcSellerRedemp_text2').val('');
    $('#srcWaperdRedemp_text1').val('');
    $('#srcWaperdRedemp_text2').val('');
    $('#textExpireWaperdRedemp').val('');
    $('#srcReferentorRedemp_text1').val('');
    $('#srcReferentorRedemp_text2').val('');
}

function ResetFormTrxRedemp() {
    _StatusTransaksiRedemp = "";

    $('#textNoTransaksiRedemp').val('');
    $('#srcProductRedemp_text1').val('');
    $('#srcProductRedemp_text2').val('');
    $('#srcClientRedemp_text1').val('');
    $('#srcClientRedemp_text2').val('');
    $('#srcCurrenyRedemp_text1').val('');
    $('#srcCurrenyRedemp_text2').val('');

    $('#OutstandingUnitRedemp').val(0);
    $('#RedempUnit').val(0);

    $('#checkPhoneOrderRedemp').prop('checked', false);
    $('#checkFeeEditRedemp').prop('checked', false);
    $('#_ComboJenisRedemp').val('');
    $('#MoneyFeeRedemp').val(0);
    $('#labelFeeCurrencyRedemp').val('');
    $('#PercentageFeeRedemp').val(0);
    $('#checkAll').prop('checked', false);
}

function ResetFormRDB() {
    $('#srcCIFRDB_text1').val('');
    $('#srcCIFRDB_text2').val('');
    $('#srcNoRefRDB_text1').val('');
    $('#srcNoRefRDB_text2').val('');

    $('#textSIDRDB').val('');
    $('#txtUmurRDB').val('');
    $('#textShareHolderIdRDB').val('');
    $('#textNamaRekeningRDB').val('');
    $('#maskedRekeningRDB').val('');
    $('#maskedRekeningRDBUSD').val('');
    $('#maskedRekeningRDBMC').val('');
    $('#txtbRiskProfileRDB').val('');
    $("#dtpRiskProfileRDB").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());
    $("#dateTglTransaksiRDB").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());

    ResetFormTrxSubsRDB();
    $("#dataGridViewRDB").data('kendoGrid').dataSource.data([]);

    $('#txtbInputterRDB').val('');
    $('#srcSellerRDB_text1').val('');
    $('#srcSellerRDB_text2').val('');
    $('#srcWaperdRDB_text1').val('');
    $('#srcWaperdRDB_text2').val('');
    $('#textExpireWaperdRDB').val('');
    $('#srcReferentorRDB_text1').val('');
    $('#srcReferentorRDB_text2').val('');
}

function ResetFormTrxSubsRDB() {
    _StatusTransaksiRDB = "";

    $('#textNoTransaksiRDB').val('');
    $('#srcProductRDB_text1').val('');
    $('#srcProductRDB_text2').val('');
    $('#srcClientRDB_text1').val('');
    $('#srcClientRDB_text2').val('');
    $('#srcCurrenyRDB_text1').val('');
    $('#srcCurrenyRDB_text2').val('');
    $('#MoneyNomRDB').val(0);
    $('#checkPhoneOrderRDB').prop('checked', false);

    $('#JangkaWktRDB').val(0);
    $('#dtJatuhTempoRDB').val('');
    $('#cmbFrekPendebetanRDB').val('')
    $('#cmbAutoRedempRDB').val('')
    $('#cmbAsuransiRDB').val('')

    $('#checkFeeEditRDB').prop('checked', false);
    $('#_ComboJenisRDB').val('');
    $('#MoneyFeeRDB').val(0);
    $('#labelFeeCurrencyRDB').val('');
    $('#PercentageFeeRDB').val(0);
}

function ResetFormSwc() {

    $('#labelStatusSwc').val('');
    $('#srcCIFSwc_text1').val('');
    $('#srcCIFSwc_text2').val('');
    $('#srcNoRefSwc_text1').val('');
    $('#srcNoRefSwc_text2').val('');

    $('#textSIDSwc').val('');
    $('#txtUmurSwc').val('');
    $('#textShareHolderIdSwc').val('');
    $('#textNamaRekeningSwc').val('');
    $('#maskedRekeningSwc').val('');
    $('#maskedRekeningSwcUSD').val('');
    $('#maskedRekeningSwcMC').val('');
    $('#txtbRiskProfileSwc').val('');
    $("#dtpRiskProfileSwc").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());
    $('#textNoTransaksiSwc').val('');
    $("#dateTglTransaksiSwc").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());

    $('#srcProductSwcOut_text1').val('');
    $('#srcProductSwcOut_text2').val('');

    $('#srcClientSwcOut_text1').val('');
    $('#srcClientSwcOut_text2').val('');

    $('#OutstandingUnitSwc').val('');
    $('#RedempSwc').val('');

    $('#srcProductSwcIn_text1').val('');
    $('#srcProductSwcIn_text2').val('');

    $('#srcClientSwcIn_text1').val('');
    $('#srcClientSwcIn_text2').val('');

    $('#checkPhoneOrderSwc').prop('checked', false);
    $('#checkFeeEditSwc').prop('checked', false);
    $('#checkSwcAll').prop('checked', false);

    $('#MoneyFeeSwc').val(0);
    $('#labelFeeCurrencySwc').val('');
    $('#PercentageFeeSwc').val(0);

    $('#txtbInputterSwc').val('');
    $('#srcSellerSwc_text1').val('');
    $('#srcSellerSwc_text2').val('');
    $('#srcWaperdSwc_text1').val('');
    $('#srcWaperdSwc_text2').val('');
    $('#textExpireWaperdSwc').val('');
    $('#srcReferentorSwc_text1').val('');
    $('#srcReferentorSwc_text2').val('');
}

function ResetFormSwcRDB() {
    var Today = new Date();
    $('#labelStatusSwcRDB').val('');
    $('#srcCIFSwcRDB_text1').val('');
    $('#srcCIFSwcRDB_text2').val('');
    $('#srcNoRefSwcRDB_text1').val('');
    $('#srcNoRefSwcRDB_text2').val('');

    $('#textSIDSwcRDB').val('');
    $('#txtUmurSwcRDB').val('');
    $('#textShareHolderIdSwcRDB').val('');
    $('#textNamaRekeningSwcRDB').val('');
    $('#maskedRekeningSwcRDB').val('');
    $('#maskedRekeningSwcRDBUSD').val('');
    $('#maskedRekeningSwcRDBMC').val('');
    $('#txtbRiskProfileSwcRDB').val('');
    $("#dtpRiskProfileSwcRDB").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());
    $('#textNoTransaksiSwcRDB').val('');
    $("#dateTglTransaksiSwcRDB").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());

    $('#srcProductSwcRDBOut_text1').val('');
    $('#srcProductSwcRDBOut_text2').val('');

    $('#srcClientSwcRDBOut_text1').val('');
    $('#srcClientSwcRDBOut_text2').val('');

    $('#OutstandingUnitSwcRDB').val(0);
    $('#RedempSwcRDB').val(0);

    $('#JangkaWktSwcRDB').val(0);
    $('#dtJatuhTempoSwcRDB').val('');
    $('#cmbFrekPendebetanSwcRDB').val('');
    $('#cmbAutoRedempSwcRDB').val('');
    $('#cmbAsuransiSwcRDB').val('');

    $('#srcProductSwcRDBIn_text1').val('');
    $('#srcProductSwcRDBIn_text2').val('');

    $('#srcClientSwcRDBIn_text1').val('');
    $('#srcClientSwcRDBIn_text2').val('');

    $('#checkPhoneOrderSwcRDB').prop('checked', false);
    $('#checkFeeEditSwcRDB').prop('checked', false);
    $('#MoneyFeeSwcRDB').val(0);
    $('#labelFeeCurrencySwcRDB').val('');
    $('#PercentageFeeSwcRDB').val(0);

    $('#txtbInputterSwcRDB').val('');
    $('#srcSellerSwcRDB_text1').val('');
    $('#srcSellerSwcRDB_text2').val('');
    $('#srcWaperdSwcRDB_text1').val('');
    $('#srcWaperdSwcRDB_text2').val('');
    $('#textExpireWaperdSwcRDB').val('');
    $('#srcReferentorSwcRDB_text1').val('');
    $('#srcReferentorSwcRDB_text2').val('');
}

function ResetFormBooking() {
    var Today = new Date();
    $('#labelStatusBooking').val('');
    $('#srcCIFBooking_text1').val('');
    $('#srcCIFBooking_text2').val('');
    $('#srcNoRefBooking_text1').val('');
    $('#srcNoRefBooking_text2').val('');

    $('#textSIDBooking').val('');
    $('#txtUmurBooking').val('');
    $('#textShareHolderIdBooking').val('');
    $('#textNamaRekeningBooking').val('');
    $('#maskedRekeningBooking').val('');
    $('#maskedRekeningBookingUSD').val('');
    $('#maskedRekeningBookingMC').val('');
    $('#txtbRiskProfileBooking').val('');
    $("#dtpRiskProfileBooking").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());
    $('#textNoTransaksiBooking').val('');
    $("#dateTglTransaksiBooking").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());

    $('#srcProductBooking_text1').val('');
    $('#srcProductBooking_text2').val('');
    $('#srcClientBooking_text1').val('');
    $('#srcClientBooking_text2').val('');
    $('#srcCurrencyBooking_text1').val('');
    $('#srcCurrencyBooking_text2').val('');

    $('#MoneyNomBooking').val(0);
    $('#checkPhoneOrderBooking').prop('checked', false);
    $('#_sisaunit').val('');

    $('#checkFeeEditBooking').prop('checked', false);
    $('#_ComboJenisBooking').val('');
    $('#MoneyFeeBooking').val(0);
    $('#labelFeeCurrencyBooking').val('');
    $('#PercentageFeeBooking').val(0);

    $('#txtbInputterBooking').val('');
    $('#srcSellerBooking_text1').val('');
    $('#srcSellerBooking_text2').val('');
    $('#srcWaperdBooking_text1').val('');
    $('#srcWaperdBooking_text2').val('');
    $('#textExpireWaperdBooking').val('');
    $('#srcReferentorBooking_text1').val('');
    $('#srcReferentorBooking_text2').val('');
}

function ValidasiKodeKantor(strKodeKantor, result) {
    $.ajax({
        type: 'GET',
        url: '/Global/ValidateOfficeId',
        data: { OfficeId: strKodeKantor },
        success: function (data) {
            if (data.blnResult) {
                if (data.isAllowed == true) {
                    //_tabJenisTransaksi.Enabled = true;
                    result(true);
                } else {
                    subCancel();
                    //_tabJenisTransaksi.Enabled = false;
                    swal("Warning", "Kode Kantor tidak terdaftar, transaksi reksadana tidak dapat dilakukan!", "warning");
                    $("#btnRefresh").hide();
                    $("#btnNew").hide();
                    $("#btnEdit").hide();
                    $("#btnSave").hide();
                    $("#btnCancel").hide();
                    result(false);
                }
            }
            else {
                swal("Error", data.strErrMsg, "error");
                result(false);
            }
        }
    });
}

function SetEnableOfficeId(strKodeKantor) {
    var strIsEnable = "", strErrorMessage = "";
    //if (clsValidator.ValidasiCBOKodeKantor(ClQ, strKodeKantor, out strIsEnable, out strErrorMessage)) {
    //    cmpsrKodeKantorSubs.Text1 = strKodeKantor;
    //    cmpsrKodeKantorRedemp.Text1 = strKodeKantor;
    //    cmpsrKodeKantorRDB.Text1 = strKodeKantor;
    //    cmpsrKodeKantorSwc.Text1 = strKodeKantor;
    //    cmpsrKodeKantorSwcRDB.Text1 = strKodeKantor;
    //    cmpsrKodeKantorBooking.Text1 = strKodeKantor;

    //    if (strIsEnable == "1") {
    //        cmpsrKodeKantorSubs.Enabled = true;
    //        cmpsrKodeKantorSubs.ReadOnly = false;

    //        cmpsrKodeKantorRedemp.Enabled = true;
    //        cmpsrKodeKantorRedemp.ReadOnly = false;

    //        cmpsrKodeKantorRDB.Enabled = true;
    //        cmpsrKodeKantorRDB.ReadOnly = false;

    //        cmpsrKodeKantorSwc.Enabled = true;
    //        cmpsrKodeKantorSwc.ReadOnly = false;

    //        cmpsrKodeKantorSwcRDB.Enabled = true;
    //        cmpsrKodeKantorSwcRDB.ReadOnly = false;

    //        cmpsrKodeKantorBooking.Enabled = true;
    //        cmpsrKodeKantorBooking.ReadOnly = false;
    //    }
    //    else {
    //        cmpsrKodeKantorSubs.Enabled = false;
    //        cmpsrKodeKantorSubs.ReadOnly = true;

    //        cmpsrKodeKantorRedemp.Enabled = false;
    //        cmpsrKodeKantorRedemp.ReadOnly = true;

    //        cmpsrKodeKantorRDB.Enabled = false;
    //        cmpsrKodeKantorRDB.ReadOnly = true;

    //        cmpsrKodeKantorSwc.Enabled = false;
    //        cmpsrKodeKantorSwc.ReadOnly = true;

    //        cmpsrKodeKantorSwcRDB.Enabled = false;
    //        cmpsrKodeKantorSwcRDB.ReadOnly = true;

    //        cmpsrKodeKantorBooking.Enabled = false;
    //        cmpsrKodeKantorBooking.ReadOnly = true;
    //    }
    //}
}

    function ResetAllKodeKantor() {
    $("#srcOfficeSubs_text1").val(strBranch);
    $("#srcOfficeRedemp_text1").val(strBranch);
    $("#srcOfficeRDB_text1").val(strBranch);
    $("#srcOfficeSwc_text1").val(strBranch);
    $("#srcOfficeSwcRDB_text1").val(strBranch);
    $("#srcOfficeBooking_text1").val(strBranch);
    }

    function subSetVisibleGrid(_strTabName)
    {
        if (_strTabName == "SUBS")
        {     
            var dataGridViewSubs = $('#dataGridViewSubs').data('kendoGrid');
            dataGridViewSubs.hideColumn('TglTrx');
        }      
    }

    function CheckIsSubsNew(CIFNo, ProductId, IsRDB, IsSubsNew, ClientCodeSubsAdd)
    {
        $.ajax({
            type: 'GET',
            url: '/Transaksi/CheckSubsType',
            data: { CIFNo: CIFNo, ProductId: ProductId, IsRDB: IsRDB },
            success: function (data) {
                if (data.blnResult) {
                    IsSubsNew = data.IsSubsNew;
                    ClientCodeSubsAdd(data.strClientCode);
                }
                else {
                    IsSubsNew(false);
                    ClientCodeSubsAdd("");
                    swal("Warning", data.ErrMsg, "warning");
                }
            }
        });
    }

    function GenerateTranCodeAndClientCode(JenisTrx,IsSubsNew,ProductCode,ClientCode, 
             CIFNo,IsFeeEdit,PercentageFee,Period,FullAmount,Fee,TranAmt, 
        TranUnit, IsRedempAll, FrekuensiPendebetan, JangkaWaktu, intTypeTrx)
    {
        var model = JSON.stringify({
            'JenisTrx': JenisTrx,
            'IsSubsNew': IsSubsNew,
            'ProductCode': ProductCode,
            'ClientCode': ClientCode,
            'CIFNo': CIFNo,
            'IsFeeEdit': IsFeeEdit,
            'PercentageFee': PercentageFee,
            'Period': Period,
            'FullAmount': FullAmount,
            'Fee': Fee,
            'TranAmt': TranAmt,
            'TranUnit': TranUnit,
            'IsRedempAll': IsRedempAll,
            'FrekuensiPendebetan': FrekuensiPendebetan,
            'JangkaWaktu': JangkaWaktu,
            'intTypeTrx': intTypeTrx,
            'TranCode': '',
            'NewClientCode': ''
        });
        return $.ajax({
            type: 'POST',
            url: '/Transaksi/GenerateTranCodeClientCode',
            data: model,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            async: false
        });

        
    }

    function HitungFee(ProdId, ClientId, TranType, TranAmt, TranUnit,
        FullAmount, IsFeeEdit, PercentageFeeInput,
        Jenis, strCIFNo, FeeCurr, NominalFee, PctFee, intPeriod)
    {
        $.ajax({
            type: 'GET',
            url: '/Transaksi/CalculateFee',
            data: {
                ProdId: ProdId, ClientId: ClientId, TranType: TranType, TranAmt: TranAmt, TranUnit: TranUnit,
                FullAmount: FullAmount, IsFeeEdit: IsFeeEdit, PercentageFeeInput: PercentageFeeInput,
                Jenis: Jenis, strCIFNo: strCIFNo, ByPercent: ByPercent},
            success: function (data) {
                if (data.blnResult) {
                    FeeCurr(data.resultFee.FeeCCY);
                    intPeriod(data.resultFee.Period);
                    if (Jenis == 1) //hitung fee tanpa edit fee
                    {
                        var Fee = data.resultFee.Fee;
                        Fee = Math.round(Fee * 100) / 100
                        NominalFee (Fee);

                        var PercentFee = data.resultFee.PercentageFeeOutput;
                        PctFee (PercentFee);

                        if (ByPercent == true) {
                            NominalFee (PercentFee);
                            PctFee (Fee);
                        }
                        else if (ByPercent == false) {
                            NominalFee (Fee);
                            PctFee (PercentFee);
                        }
                    }
                    else if (Jenis == 2) //hitung fee dengan edit fee 
                    {
                        if (ByPercent == true) {
                            var newFee = data.resultFee.Fee;
                            newFee = Math.round(newFee * 100) / 100;
                            PctFee (newFee);
                        }
                        else if (ByPercent == false) {
                            newPercentFee = data.resultFee.PercentageFeeOutput;
                            PctFee (newPercentFee);
                        }
                    }                    
                }
                else {
                    FeeCurr ('');
                    NominalFee(0);
                    PctFee (0);
                }
            }
        });
    }

    function GetLatestBalance(ClientId, Balance)
    {
        $.ajax({
            type: 'GET',
            url: '/Transaksi/GetLatestBalance',
            data: {
                ClientID: ClientId
            },
            success: function (data) {
                if (data.blnResult) {
                    Balance(data.unitBalance);
                }
                else {
                    Balance(0);
                }
            }
        });
    }

    function onChange_ComboJenisSubs(e) {
        var dropdownlist = $("#_ComboJenisSubs").data("kendoDropDownList");
        var Text = dropdownlist.text();

        $("#MoneyFeeSubs").val(0);
        $("#PercentageFeeSubs").val(0);

        if (Text == "By %") {
            $("#_KeteranganFeeSubs").text($("#srcCurrSubs_text1").val());
            $("#labelFeeCurrencySubs").text("%");
            ByPercent = true;
            //nispMoneyFeeSubs.DecimalPlace = 3;
            //nispPercentageFeeSubs.DecimalPlace = 2;
        }
        else {
            $("#_KeteranganFeeSubs").text("%");
            $("#labelFeeCurrencySubs").text($("#srcCurrSubs_text1").val());
            ByPercent = false;
            //nispMoneyFeeSubs.DecimalPlace = 2;
            //nispPercentageFeeSubs.DecimalPlace = 3;
        }

    }
    function onBound_ComboJenisSubs(e) {
        var dropdownlist = $("#_ComboJenisSubs").data("kendoDropDownList");
        var len = dropdownlist.dataSource.data().length;

        if (len > 0) {
            dropdownlist.select(0);
            onChange_ComboJenisSubs();
        }
    } 

    function toDate(dateStr) {
        const [day, month, year] = dateStr.split("/")
        return new Date(year, month - 1, day)
    }
</script>

