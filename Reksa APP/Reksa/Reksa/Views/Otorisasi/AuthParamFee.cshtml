@model Reksa.ViewModels.OtorisasiListViewModel
@using Reksa.Models
@using Kendo.Mvc.UI.Fluent

@{
    ViewData["Title"] = "Otorisasi Parameter Fee";
}

<div class="col-md-3">
    <div class="panel panel-default" style="padding-bottom:100%">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" data-parent="#accordion" href="#collapse2">Authorization</a>
            </h4>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-12">
                    @(Html.Kendo().TreeView().Name("TreeViewAuthParamFee")
                            .BindTo((IEnumerable<CommonTreeViewModel>)ViewBag.Tree, (NavigationBindingFactory<TreeViewItem> mappings) =>
                            {
                                mappings.For<CommonTreeViewModel>(binding => binding.ItemDataBound((item, node) =>
                                {
                                    item.Id = node.tree_id.ToString(); item.Text = node.tree_name; item.Expanded = node.Expanded;
                                    item.SpriteCssClasses = node.populate_query.ToString();
                                }).Children(node => node.Children));
                            }).Events(events => events.Select("onSelect"))
                    )
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Begin Button -->
<div class="col-md-9">
    <div class="card-box">
        <div class="row">
            <div class="input-group">
                <button id=btnRefresh class="btn btn-default waves-effect waves-light" style="margin-right:10px">
                    <span class="btn-label">
                        <i class="fa fa-refresh"></i>
                    </span>
                    Refresh
                </button>
                <button id=btnApprove class="btn btn-info waves-effect waves-light" style="margin-right:10px">
                    <span class="btn-label">
                        <i class="fa fa-cogs"></i>
                    </span>
                    Process
                </button>
                <button id="btnReject" class="btn btn-danger waves-effect waves-light" style="margin-right:10px">
                    <span class="btn-label">
                        <i class="fa fa-times"></i>
                    </span>
                    Reject
                </button>
                <button id=button1 data-toggle="modal" data-target="#AuthParamFeeDetailModal"  class="btn btn-primary waves-effect waves-light" style="margin-right:10px">
                    <span class="btn-label">
                        <i class="fa fa-search"></i>
                    </span>
                    View Selected Data Detail
                </button>
            </div>
        </div>
    </div>
</div>
<!-- End Button -->


<div class="col-md-9">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" data-parent="#accordion" href="#collapse2">Detail</a>
            </h4>
        </div>
        <div id="collapse2" class="panel-collapse collapse in" aria-expanded="true">
            <div class="panel-body">
                <div class="row">
                    <div id="dataGridView1"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="AuthParamFeeDetailModal" tabindex="-1" role="dialog" aria-labelledby="AuthParamFeeDetailModalLabel">
    <div class="modal-dialog" style="width:80%;">
        <div class="modal-content">

        </div>
    </div>
</div>
<script>
    var treeid;
    var treename;
    var SelectedTree;
     $(document).ready(function () {
        var gridOptions = {
            height: 400
        };
         $("#dataGridView1").kendoGrid(gridOptions);
    });

    function onSelect(e) {
        SelectedTree = this.dataItem(e.node);
        subPopulateGridMain();
    }
    function subPopulateGridMain() {
        treeid = SelectedTree.id;
        treename = SelectedTree.text;
        var strPopulate = SelectedTree.spriteCssClass;
        if (treename != 'Authorization') {
            $.ajax({
                type: 'GET',
                url: '/Otorisasi/PopulateGridMainParamFee',
                data: { treename: treename, strPopulate: strPopulate, SelectedId: treeid },
                success: function (data) {
                    var grid = $("#dataGridView1").data("kendoGrid");
                    if (data.blnResult) {
                        $("#dataGridView1").empty();
                        populateGrid(data.dsResult.table);
                        grid.hideColumn('subsId');
                        $("#dataGridView1 th[data-field=processType]").html("Process Type")
                        $("#dataGridView1 th[data-field=product]").html("Product")
                        $("#dataGridView1 th[data-field=old_MinPercentFeeEmployee]").html("Old Min PercentFee Employee")
                        $("#dataGridView1 th[data-field=new_MinPercentFeeEmployee]").html("New Min PercentFee Employee")
                        $("#dataGridView1 th[data-field=old_MinPercentFeeNonEmployee]").html("Old Min PercentFee Non Employee")
                        $("#dataGridView1 th[data-field=inputDate]").html("Input Date")
                        $("#dataGridView1 th[data-field=inputter]").html("Inputter")


                    }
                    else {
                        $("#dataGridView1").empty();
                    }
                }
            });
        }
    }
    function populateGrid(response) {
        var columns = generateColumns(response);
        var gridOptions = {
            dataSource: {
                transport: {
                    read: function (options) {
                        options.success(response);
                    }
                },
                pageSize: 10,
                page: 1
            },
            //change: onRowOtorisasiSelect,
            columns: columns,
            pageable: true,
            selectable: true,
            height: 400
        };

        var grid = $("#dataGridView1").data("kendoGrid");
        if (grid) {
            grid.setOptions(gridOptions);
            grid.select("tr:eq(0)");
        } else {
            $("#dataGridView1").kendoGrid(gridOptions);
        }
    }
    function generateColumns(response) {
        var columnNames = Object.keys(response[0]);
        return columnNames.map(function (name) {
            var checkB = name.indexOf("checkB") > -1 || name.indexOf("checkB") > -1;
            var inputDate = name.indexOf("inputDate") > -1 || name.indexOf("inputDate") > -1;
            var old_MinPercentFeeEmployee = name.indexOf("old_MinPercentFeeEmployee") > -1 || name.indexOf("old_MinPercentFeeEmployee") > -1;
            var value = 'subsId';

            return {
                headerTemplate: checkB ? "<input type='checkbox'  id='chkSelectAll' onclick='checkAll(this)' />" : name,
                template: checkB ? "<input type='checkbox' onclick='onCheckBoxClick(this)' value= '#= " + value + " #'" +
                    "# if (checkB) { #" +
                    "checked='checked'" +
                    "# } #" +
                    "/>"
                    : inputDate ? "#= kendo.toString(kendo.parseDate(inputDate, 'yyyy-MM-dd'), 'dd/MM/yyyy') #"
                            : columnNames,
                field: name,
                width: old_MinPercentFeeEmployee ? 250 : checkB ? 50 : 200,
                title: checkB ? "CheckBox" : name
            };
        })
    }
    function checkAll(e) {
        var state = $(e).is(':checked');
        var grid = $('#dataGridView1').data('kendoGrid');
        $.each(grid.dataSource.view(), function () {
            if (this['checkB'] != state)
                this.dirty = true;

            this['checkB'] = state;
        });
        grid.refresh();
    }
    function onCheckBoxClick(e) {
        var state = $(e).is(':checked');
        var value = e.value;

        var grid = $('#dataGridView1').data('kendoGrid');
        grid.refresh();

        grid.tbody.find("tr[role='row']").each(function () {
            var dataItem = grid.dataItem(this);

            if (dataItem.subsId == value) {
                dataItem.checkB = state;
            }
        })

        var chkAll = $('#chkSelectAll').is(':checked');
        var isCheckedAll = true;
        var countTrue = 0;
        var countFalse = 0;
        var countAll = 0;

        $.each(grid.dataSource.view(), function () {
            if (this['checkB'] == true) {
                countTrue = countTrue + 1;
            }
            else {
                countFalse = countFalse + 1;
                isCheckedAll = false;
            }
            countAll = countAll + 1;
        });
        if (countFalse == 0 || (countFalse == 1 && !state)) {
            $('#chkSelectAll').prop("checked", state);
        }
        grid.refresh();
    }

    $('#button1').click(function () {
        var SubsId;
        var Product;
        var selectedId;

        var grid = $("#dataGridView1").data("kendoGrid");
        grid.refresh();
        var dataItems = "";
        grid.tbody.find("tr[role='row']").each(function () {
            var dataItem = grid.dataItem(this);

            if (dataItem.checkB == true) {
                dataItems += dataItem.subsId + "|";
                Product = dataItem.product;
                SubsId = dataItem.subsId;
                selectedId = selectedId + 1;
            }
        })

        if (selectedId > 1)
        {
            $(this).attr('data-toggle', '');
            $(this).attr('data-target', '');
            swal("Warning", "Data yang dipilih lebih dari 1!", "warning");
        }
        else if (dataItems == "") {
            $(this).attr('data-toggle', '');
            $(this).attr('data-target', '');
            swal("Warning", "Tidak ada data yang dipilih!", "warning");
        }
        else
        {
            $(this).attr('data-toggle', 'modal');
            $(this).attr('data-target', '#AuthParamFeeDetailModal');
            $(this).attr('href', function () {
                return '@Html.Raw(Url.Action("AuthParamFeeDetail", "Otorisasi"))?JenisFee=' + SelectedTree.id +'&SubsId=' + SubsId +'&Product=' + Product;
            });
        }
    });
    $('#btnRefresh').click(function (e) {
        subPopulateGridMain();
    });
    $('#btnApprove').click(function (e) {
        subApprove(true);
    });
    $('#btnReject').click(function (e) {
        subApprove(false);
    });
    function subApprove(isApprove) {
        var grid = $("#dataGridView1").data("kendoGrid");
        grid.refresh();
        var dataItems = "";
        grid.tbody.find("tr[role='row']").each(function () {
            var dataItem = grid.dataItem(this);

            if (dataItem.checkB == true) {
                dataItems += dataItem.subsId + "|";
            }
        })
        if (dataItems == "")
            swal("Warning", "No data selected!", "warning");
        else {
            var message;
            if (isApprove == true)
                message = 'approve';
            else
                message = 'reject';

            swal({
                title: "Are you sure to " + message + " this data?",
                text: "",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: 'btn-info',
                confirmButtonText: "Yes, " + message + " it!",
                closeOnConfirm: false
            },
                function () {
                    $.ajax({
                        type: "POST",
                        url: "/Otorisasi/ApproveReject",
                        data: { listId: dataItems, treeid: treeid, isApprove: isApprove },
                        success: function (data) {
                            if (data.blnResult) {
                                if (isApprove == true) {
                                    swal("Approved!", "Your data has been aprroved", "success");
                                }
                                else {
                                    swal("Rejected!", "Your data has been rejected", "success");
                                }
                            } else {
                                swal("Warning", data.ErrMsg, "warning");
                            }
                        }
                    });

                });
        }
    }

</script>