@model Reksa.ViewModels.OtorisasiListViewModel

@{
    ViewData["Title"] = "Otorisasi NFS";
}

<!-- Begin Button -->
<div class="col-md-12">
    <div class="card-box">
        <div class="row">
            <button id=btnRefresh class="btn btn-default waves-effect waves-light">
                <span class="btn-label">
                    <i class="fa fa-refresh"></i>
                </span>
                Refresh
            </button>
            <button id=btnProcess class="btn btn-info waves-effect waves-light">
                <span class="btn-label">
                    <i class="fa fa-cogs"></i>
                </span>
                Process
            </button>
            <button id="btnReject" class="btn btn-danger waves-effect waves-light">
                <span class="btn-label">
                    <i class="fa fa-times"></i>
                </span>
                Reject
            </button>
        </div>
    </div>
</div>
<!-- End Button -->

<div class="col-md-4">
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="row">
                <div id="dgvPeriod"></div>
            </div>
        </div>
    </div>
</div>

<div class="col-md-8">
    <div class="panel panel-default">
            <div class="panel-body">
                <div class="row">
                    <div id="dgDetail"></div>
                </div>
            </div>
    </div>
</div>


<div class="col-md-12">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" data-parent="#accordion" href="#collapse2">Detail</a>
            </h4>
        </div>
        <div id="collapse2" class="panel-collapse collapse in" aria-expanded="true">
            <div class="panel-body">
                <div class="row">
                    <div id="dgMain"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var logId = 0;
    var xmlGenerateData;
    var sSeparator;
    var sFormatFile;
    var sFilterFile;
    var sFileName;

    $(document).ready(function () {
        var grid = {
            height: 300
        };
        $("#dgvPeriod").kendoGrid(grid);
        $("#dgMain").kendoGrid(grid);
        $("#dgDetail").kendoGrid(grid);        
        subRefresh();
    });

    $("#btnRefresh").click(function () {
        subRefresh();
    });

    $("#btnProcess").click(function () {
        subApprove();
    });

    $("#btnReject").click(function () {
        subReject();
    });

    

    function subRefresh()
    {
        $.ajax({
            type: 'GET',
            url: '/Otorisasi/NFSFileCekPendingOtorisasi',
            data: { TypeGet: 'A', LogId: '' },
            success: function (data) {
                if (data.blnResult)
                {
                    var gridView = $("#dgvPeriod").data("kendoGrid");
                    var gridData = populateGrid(data.dsResult.table);
                    gridView.setOptions(gridData);
                    gridView.dataSource.page(1);
                    gridView.select("tr:eq(0)");
                    $("#dgvPeriod th[data-field=logId]").html("Log Id")
                    $("#dgvPeriod th[data-field=period]").html("Period")
                    $("#dgvPeriod th[data-field=typeUpload]").html("Type Upload")
                } else
                {
                    swal("Warning", data.ErrMsg, "warning");
                }
            }
        });
    }

    function populateGrid(response) {
        if (response.length > 0) {
            var columns = generateColumns(response);
            return gridOptions = {
                dataSource: {
                    transport: {
                        read: function (options) {
                            options.success(response);
                        }
                    },
                    pageSize: 5,
                    page: 1
                },
                change: onRowPeriodSelect,
                columns: columns,
                pageable: true,
                selectable: true,
                height: 300
            };
        } else {
            $("#dgvPeriod").empty();
        }
    }

    function populateGridMain(response) {
        if (response.length > 0) {
            var columns = generateColumns(response);
            return gridOptions = {
                dataSource: {
                    transport: {
                        read: function (options) {
                            options.success(response);
                        }
                    },
                    pageSize: 5,
                    page: 1
                },
                change: onRowMainSelect,
                columns: columns,
                pageable: true,
                selectable: true,
                height: 300
            };
        } else {
            $("#dgMain").empty();
        }
    }

    function populateGridDetail(response) {
        if (response.length > 0) {
            var columns = generateColumns(response);
            return gridOptions = {
                dataSource: {
                    transport: {
                        read: function (options) {
                            options.success(response);
                        }
                    },
                    pageSize: 5,
                    page: 1
                },
                columns: columns,
                pageable: true,
                selectable: true,
                height: 300
            };
        } else {
            $("#dgMain").empty();
        }
    }

    function generateColumns(response) {
        var columnNames = Object.keys(response[0]);
        return columnNames.map(function (name) {
            var alamat = name.indexOf("namaPerusahaan") > -1 || name.indexOf("namaPerusahaan") > -1;
            var sid = name.indexOf("sid") > -1 || name.indexOf("sid") > -1;
            var noSIUP = name.indexOf("noSIUP") > -1 || name.indexOf("noSIUP") > -1;
            var alamatPerusahaan = name.indexOf("alamatPerusahaan") > -1 || name.indexOf("alamatPerusahaan") > -1;
            var noSKD = name.indexOf("noSKD") > -1 || name.indexOf("noSKD") > -1;

            return {
                field: name,
                width: alamat ? 300 : sid ? 150 : noSIUP ? 130 : alamatPerusahaan ? 600 : noSKD ? 180: 100,
                title: name
            };
        })
    }

    function onRowPeriodSelect() {
        var data = this.dataItem(this.select());
        logId = data.logId;
        $.ajax({
            type: 'GET',
            url: '/Otorisasi/NFSFileCekPendingOtorisasi',
            data: { TypeGet: 'G', LogId: logId },
            success: function (data) {
                if (data.blnResult) {
                    var gridView = $("#dgMain").data("kendoGrid");
                    var gridData = populateGridMain(data.dsResult.table);
                    gridView.setOptions(gridData);
                    gridView.dataSource.page(1);
                    gridView.select("tr:eq(0)");

                    xmlGenerateData = data.generateData;
                    sSeparator = data.fieldSeparator;
                    sFormatFile = data.formatFile;
                    sFilterFile = data.filterFileDialog;
                    sFileName = data.fileName;

                    $("#dgMain th[data-field=noCIF]").html("No CIF")
                    $("#dgMain th[data-field=namaPerusahaan]").html("Nama Perusahaan")
                    $("#dgMain th[data-field=noSIUP]").html("No SIUP")
                    $("#dgMain th[data-field=sid]").html("SID")
                    $("#dgMain th[data-field=noSKD]").html("No SKD")
                    $("#dgMain th[data-field=alamatPerusahaan]").html("Alamat Perusahaan")
                    

                    gridView.hideColumn('generateData');
                    gridView.hideColumn('fieldSeparator');
                    gridView.hideColumn('formatFile');
                    gridView.hideColumn('filterFileDialog');
                    gridView.hideColumn('fileName');
                } else {
                    swal("Warning", data.ErrMsg, "warning");
                }
            }
        });
    };

    function onRowMainSelect() {
        var data = this.dataItem(this.select());
        $.ajax({
            type: 'GET',
            url: '/Otorisasi/NFSCekPendingDetailOtorisasi',
            data: { CIFNo: data.noCIF, LogId: logId },
            success: function (data) {
                if (data.blnResult) {
                    var gridView = $("#dgDetail").data("kendoGrid");
                    var gridData = populateGridDetail(data.dsResult.table);
                    gridView.setOptions(gridData);

                    $("#dgDetail th[data-field=field]").html("Field")
                    $("#dgDetail th[data-field=oldValue]").html("Old Value")
                    $("#dgDetail th[data-field=newValue]").html("New Value")
                } else {
                    swal("Warning", data.ErrMsg, "warning");
                }
            }
        });
    };   

    function UpdateFlagApprove(inpLogId)
    {
        $.ajax({
            type: 'GET',
            url: '/Otorisasi/UpdateFlagApprovalNFSGenerate',
            data: { Type: 'A', LogId: inpLogId },
            success: function (data) {
                if (data.blnResult) {
                    //window.location = '/Report/Download?fileGuid=' + data.FileGuid
                    //    + '&filename=' + data.FileName;

                    swal("Success", "Sukses Generate File Upload.", "success");
                    subRefresh();
                } else {
                    swal("Warning", data.ErrMsg, "warning");
                }
            }
        });
    }

    function subApprove()
    {
        if (logId == 0) {
            swal("Warning", "Tidak Ada Data Yang di Proses", "warning");
        } else
        {
            UpdateFlagApprove(logId);
        }
    }

    function subReject() {
        $.ajax({
            type: 'GET',
            url: '/Otorisasi/UpdateFlagApprovalNFSGenerate',
            data: { Type: 'R', LogId: logId },
            success: function (data) {
                if (data.blnResult) {
                    swal("Success", "Berhasil Reject Data Upload", "success");
                    subRefresh();
                } else {
                    swal("Warning", data.ErrMsg, "warning");
                }
            }
        });
    }
</script>