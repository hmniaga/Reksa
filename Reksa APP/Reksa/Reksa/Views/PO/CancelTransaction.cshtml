@model Reksa.ViewModels.UtilitasListViewModel
@{
    ViewData["Title"] = "Pembatalan Transaksi";
}
<div class="row">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4 class="m-t-0 header-title">
                <a>Pembatalan Transaksi</a>
            </h4>
        </div>
        <div class="panel-body">

            <div class="card-box">
                <!-- Begin Button -->
                <div>
                    <div class="input-group">
                        <button id=btnProcess class="btn btn-default waves-effect waves-light" style="margin-right:10px">
                            <span class="btn-label">
                                <i class="fa fa-cogs"></i>
                            </span>
                            Process
                        </button>
                    </div>
                </div>
                <!-- End Button -->
            </div>
           <div id="dataGridView1"></div>
        </div>
    </div>
</div>

<script>   
    $(document).ready(function () {
        var grid = {
            height: 300
        };
        $("#dataGridView1").kendoGrid(grid);
        CallReksaPopulateCancelTransaction();
    });

    $("#btnProcess").click(function () {
        CallReksaCancelTransaction();
    });

    function CallReksaCancelTransaction()
    {
        var grid = $("#dataGridView1").data("kendoGrid");
        var selectedTranId = "";
        grid.refresh();
        grid.tbody.find("tr[role='row']").each(function () {
            var dataItem = grid.dataItem(this);
            if (dataItem.checkB == true) {
                selectedTranId += dataItem.tranId + "|";
            }
        })

        if (selectedTranId == "")
        {
            swal("Warning", "Tidak ada data yang dipilih", "warning");
            return;
        }

        swal({
            title: "Konfirmasi Pembatalan Transaksi",
            text: "Anda yakin hendak membatalkan transaksi?",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: 'btn-info',
            confirmButtonText: "Yes",
            closeOnConfirm: true,
            closeOnCancel: true
        },
            function (isConfirm) {
                if (isConfirm) {
                    $.ajax({
                        type: "POST",
                        url: '/PO/subCancelTransaction',
                        data: { listTranId: selectedTranId },
                        success: function (data) {
                            if (data.blnResult == true) {
                                swal("Approved", "Proses pembatalan transaksi sukses", "success");
                            }
                            else {
                                swal("Warning", data.ErrMsg, "warning");
                            }
                            CallReksaPopulateCancelTransaction();
                        }
                    });
                } else {
                    setTimeout(function () { swal("Konfirmasi Pembatalan Transaksi", "Pembatalan transaksi tidak dilakukan", "warning") }, 500);
                }
            });        
    }

    function CallReksaPopulateCancelTransaction()
    {
        $.ajax({
            type: 'GET',
            url: '/PO/PopulateCancelTrans',
            success: function (data) {
                if (data.blnResult) {
                    var gridView = $("#dataGridView1").data("kendoGrid");
                    var gridData = populateGrid(data.dsResult.table);
                    gridView.setOptions(gridData);
                    gridView.dataSource.page(1);
                    gridView.select("tr:eq(0)");
                    gridView.hideColumn('tranId');
                    
                    $("#dataGridView1 th[data-field=clientCode]").html("Client Code")
                    $("#dataGridView1 th[data-field=prodCode]").html("Product Code")
                    $("#dataGridView1 th[data-field=tranCode]").html("Tran Code")
                    $("#dataGridView1 th[data-field=cifName]").html("CIF Name")
                    $("#dataGridView1 th[data-field=agentCode]").html("Agent Code")
                    $("#dataGridView1 th[data-field=tranDesc]").html("Description")
                    $("#dataGridView1 th[data-field=fullMonthMtcFee]").html("Full Amount Fee")
                    $("#dataGridView1 th[data-field=tranCCY]").html("Currency")
                    $("#dataGridView1 th[data-field=tranAmt]").html("Amount")
                    $("#dataGridView1 th[data-field=tranUnit]").html("Unit")
                    $("#dataGridView1 th[data-field=goodFund]").html("Good Fund")
                    $("#dataGridView1 th[data-field=name]").html("Name")
                    $("#dataGridView1 th[data-field=checkerSuid]").html("Checker ID")
                    $("#dataGridView1 th[data-field=settleDate]").html("Settle Date")
                    $("#dataGridView1 th[data-field=status]").html("Status")

                } else {
                    swal("Warning", data.ErrMsg, "warning");
                }
            }
        });
    }

    function populateGrid(response) {
        if (response.length > 0) {
            var columns = generateColumns(response);
            return gridOptions = {
                dataSource: {
                    transport: {
                        read: function (options) {
                            options.success(response);
                        }
                    },
                    pageSize: 5,
                    page: 1
                },
                //change: onRowPeriodSelect,
                columns: columns,
                pageable: true,
                selectable: true,
                height: 300
            };
        } else {
            $("#dataGridView1").empty();
        }
    }

    function generateColumns(response) {
        var columnNames = Object.keys(response[0]);
        return columnNames.map(function (name) {
            var checkB = name.indexOf("checkB") > -1 || name.indexOf("checkB") > -1;
            var cifName = name.indexOf("cifName") > -1 || name.indexOf("cifName") > -1;
            var tranDesc = name.indexOf("tranDesc") > -1 || name.indexOf("tranDesc") > -1;
            var value = 'tranId';
            return {
                headerTemplate: checkB ? "Pilih" : name,
                template: checkB ? "<input type='checkbox' onclick='onCheckBoxClick(this)' value= '#= " + value + " #'" +
                    "# if (checkB) { #" +
                    "checked='checked'" +
                    "# } #" +
                    "/>" : columnNames,
                field: name,
                width: checkB ? 50 : cifName ? 250 : tranDesc ? 250 : 150,
                title: name
            };
        })
    }

    function onCheckBoxClick(e) {
        var state = $(e).is(':checked');
        var value = e.value;

        var grid = $('#dataGridView1').data('kendoGrid');
        grid.refresh();

        grid.tbody.find("tr[role='row']").each(function () {
            var dataItem = grid.dataItem(this);

            if (dataItem.tranId == value) {
                dataItem.checkB = state;
                if (state) {
                    grid.select("tr:eq(value)");
                }
            }
        })
        var chkAll = $('#chkSelectAll').is(':checked');
        var isCheckedAll = true;
        var countTrue = 0;
        var countFalse = 0;
        var countAll = 0;

        $.each(grid.dataSource.view(), function () {
            if (this['checkB'] == true) {
                countTrue = countTrue + 1;
            }
            else {
                countFalse = countFalse + 1;
                isCheckedAll = false;
            }
            countAll = countAll + 1;
        });
        if (countFalse == 0 || (countFalse == 1 && !state)) {
            $('#chkSelectAll').prop("checked", state);
        }
        grid.refresh();
    }
</script>
