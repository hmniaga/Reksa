@{
    ViewBag.Title = "Search Client";
    string search = (string)ViewBag.Search;
    string criteria = (string)ViewBag.Criteria;

    Layout = null;
}
<script type="text/javascript">
    function onSearchTrxClientSwcOut() {
        var value = $("#TrxClientSwcOutSearchComponentSearchTxt").val();
        var grid = $("#TrxClientSwcOutSearchComponentGrid").data("kendoGrid");

        var parsedUrl = updateQueryStringParameter(grid.dataSource.transport.options.read.url, "search", value);
        grid.dataSource.transport.options.read.url = parsedUrl;

        grid.dataSource.page(1);
        grid.dataSource.read();
        grid.refresh();
    }

    function updateQueryStringParameter(uri, key, value) {
        var re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
        var separator = uri.indexOf('?') !== -1 ? "&" : "?";
        if (uri.match(re)) {
            return uri.replace(re, '$1' + key + "=" + value + '$2');
        }
        else {
            return uri + separator + key + "=" + value;
        }
    }

    function onRowTrxClientSwcOutSelect(e) {
        var data = this.dataItem(this.select());
        var ClientCode = $.trim(data.ClientCode);
        var ClientName = $.trim(data.ClientName);
        var ClientId = $.trim(data.ClientId);

        $("#TrxClientSwcOutSelectedCode").val(ClientCode);
        $("#TrxClientSwcOutSelectedName").val(ClientName);
        $("#TrxClientSwcOutSelectedClientId").val(ClientId);
    };

    $("#TrxClientSwcOutSelectButton").on("click", function () {
        var selectedCode = $("#TrxClientSwcOutSelectedCode").val();
        var selectedName = $("#TrxClientSwcOutSelectedName").val();
        var selectedClientId = $("#TrxClientSwcOutSelectedClientId").val();

       
        $("input[id='srcClientSwcOut_text1']").val(selectedCode).change();
        $("input[id='srcClientSwcOut_text2']").val(selectedName);
        $("input[id='ClientIdSwcOut']").val(selectedClientId).change();
        
    });

    $("#TrxClientSwcOutSearchComponentSearchTxt").on("keypress", function (e) {
        var key = e.which;
        if (key == 13)  // the enter key code
        {
            $("#TrxClientSwcOutSearchComponentSearchBtn").click();
            return false;
        }
    });

    function getData() {
        var Search = "@ViewBag.Search";
        var criter = "@ViewBag.Criteria";
        return {
            search: Search,
            criteria: encodeURIComponent(criter)
        }
    }
</script>
<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4>@ViewBag.Title</h4>
    </div>
    <div class="modal-body">
        @(Html.Kendo().Grid<Reksa.Models.TransaksiClientNew>
    ()
    .Name("TrxClientSwcOutSearchComponentGrid")
    .Columns(columns =>
    {
    columns.Bound(m => m.ClientCode).Width(100).Title("Client Code");
    columns.Bound(m => m.ClientName).Width(100).Title("Client Name");
    columns.Bound(m => m.ClientId).Hidden();
    columns.Bound(m => m.CIFNo).Hidden();
    columns.Bound(m => m.JoinDate).Hidden();
    columns.Bound(m => m.IsEmployee).Hidden();
    columns.Bound(m => m.IsRDB).Hidden();
    })
    .ToolBar(toolbar =>
    {
    toolbar.ClientTemplateId("ToolbarTrxSwcOutTemplate");
    })
    .Events(events => events.Change("onRowTrxClientSwcOutSelect"))
    .Pageable()
    .Scrollable()
    .Selectable(selectable => selectable
    .Mode(GridSelectionMode.Single))
    .DataSource(dataSource => dataSource
    .Ajax()
    .PageSize(20)
    .Model(model =>
    {
    model.Id(m => m.ClientCode);
    })
    .Read(read => read.Action("SearchTrxClientData", "Global").Data("getData"))
    )
    )

    <script id="ToolbarTrxSwcOutTemplate">
        <div class="toolbar">
            @(Html.Kendo().TextBox().Name("TrxClientSwcOutSearchComponentSearchTxt").Value(search).ToClientTemplate())
            @(Html.Kendo().Button()
                            .HtmlAttributes(new { type = "button" })
                            .Name("TrxClientSwcOutSearchComponentSearchBtn")
                            .Content("Search")
                            .Events(ev => ev.Click("onSearchTrxClientSwcOut")).ToClientTemplate()
            )
        </div>
    </script>

    <input type="hidden" id="TrxClientSwcOutSelectedCode" name="TrxClientSwcOutSelectedCode" value="" />
    <input type="hidden" id="TrxClientSwcOutSelectedName" name="TrxClientSwcOutSelectedName" value="" />
    <input type="hidden" id="TrxClientSwcOutSelectedClientId" name="TrxClientSwcOutSelectedClientId" value="" />
</div>
    <div class="modal-footer">
        <button type="submit" id="TrxClientSwcOutSelectButton" class="btn btn-primary pull-left" data-dismiss="modal">
            <span class="glyphicon glyphicon-ok"></span> Select
        </button>
        <button type="submit" class="btn btn-warning pull-left" data-dismiss="modal">
            <span class="glyphicon glyphicon-remove"></span> Cancel
        </button>
    </div>
</div>
