@using Kendo.Mvc.UI
@model Reksa.ViewModels.MasterListViewModel
@{
    ViewData["Title"] = "Info Produk";
}
<div class="panel panel-default">
    <div class="panel-heading">
        <h4 class="m-t-0 header-title">
            <a>Info Produk</a>
        </h4>
    </div>
    <div id="collapse2" class="panel-collapse collapse in" aria-expanded="true">
        <div class="panel-body">
            <div class="col-md-12">
                <div class="col-md-6">
                    <!-- Begin Kode Product -->
                    <div class="form-group">
                        <label class="col-sm-3 control-label">Kode Produk</label>
                        <div class="input-group">
                            @Html.Kendo().TextBoxFor(model => model.ProductModel.ProdCode).HtmlAttributes(new { @class = "form-control input-sm", style = "width: 150%;", @id = "ProdCode" }).Enable(false)
                            <span class="input-group-btn">
                                <a href="@Url.Action("SearchProduct", "Global")" data-toggle="modal" data-target="#ProductModal" class="btn btn-default btn-sm btn-search-component src-cif enabled">...</a>
                            </span>
                            @Html.Kendo().TextBoxFor(model => model.ProductModel.ProdName).HtmlAttributes(new { @class = "form-control input-sm", style = "width: 300px;", @id = "ProdName" }).Enable(false)
                            @Html.Kendo().TextBoxFor(model => model.ProductModel.ProdId).HtmlAttributes(new { @class = "form-control input-sm", style = "width: 150%;", @id = "ProdId", @type = "hidden" })
                        </div>
                    </div>
                    <!-- End Kode Product -->
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label class="col-sm-3 control-label"></label>
                        <div class="input-group">
                            <h3 id="label27">Default</h3>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Begin Buttons -->
            <div class="col-md-12" style="padding-top: 30px">
                <div class="input-group">
                    <button class="btn btn-default waves-effect waves-light" id="btnRefresh" style="margin-right:10px">
                        <span class="btn-label">
                            <i class="fa fa-refresh"></i>
                        </span>
                        Refresh
                    </button>
                    <button id="btnAdd" class="btn btn-default waves-effect waves-light" style="margin-right:10px">
                        <span class="btn-label">
                            <i class="fa fa-plus"></i>
                        </span>
                        New
                    </button>
                    <button id="btnEdit" class="btn btn-info waves-effect waves-light" style="margin-right:10px">
                        <span class="btn-label">
                            <i class="fa fa-edit"></i>
                        </span>
                        Edit
                    </button>
                    <button id="btnDelete" class="btn btn-danger waves-effect waves-light" style="margin-right:10px">
                        <span class="btn-label">
                            <i class="fa fa-trash"></i>
                        </span>
                        Delete
                    </button>
                    <button id="btnSave" class="btn btn-warning waves-effect waves-light" style="margin-right:10px">
                        <span class="btn-label">
                            <i class="fa fa-save"></i>
                        </span>
                        Save
                    </button>
                    <button id="btnCancel" class="btn btn-pink waves-effect waves-light" style="margin-right:10px">
                        <span class="btn-label">
                            <i class="fa fa-remove"></i>
                        </span>
                        Cancel
                    </button>
                </div>
            </div>
            <!-- End Buttons -->
            <!-- Begin Tab nav 12 Oct 2019 -->
            <div class="col-md-12" style="margin-top:20px">
                <ul class="nav nav-tabs" style="background-color:#efefef">
                    <li class="active"><a data-toggle="tab" href="#home"><i class="fa fa-info-circle"></i> General Info</a></li>
                    <li><a data-toggle="tab" href="#menu1"><i class="fa fa-money"></i> Fee</a></li>
                    <li><a data-toggle="tab" href="#menu2"><i class="fa fa-clock-o"></i> Reksadana Berjangka</a></li>
                </ul>
                <div class="tab-content">
                    <div id="home" class="tab-pane fade in active">
                        <div class="row">
                            <div class="col-md-12">
                                @{
                                    Html.RenderPartial("_InfoProdukGeneral.cshtml", Model);
                                }
                            </div>
                        </div>
                    </div>
                    <div id="menu1" class="tab-pane fade">
                        <div class="row">
                            <div class="col-md-12">
                                @{
                                    Html.RenderPartial("_InfoProdukFee.cshtml", Model);
                                }
                            </div>
                        </div>
                    </div>
                    <div id="menu2" class="tab-pane fade">
                        <div class="row">
                            <div class="col-md-12">
                                @{
                                    Html.RenderPartial("_InfoProdukRDB.cshtml", Model);
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- End Tab Nav -->

        </div>
        <!-- Begin Modals -->
        <div class="modal fade" id="ProductModal" tabindex="-1" role="dialog" aria-labelledby="ProductModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content"></div>
            </div>
        </div>
        <!-- End Modals -->
    </div>
</div>
<script>
    var _intType;
    var _intProdId;
    var isUpdate;

    $(document).ready(function () {
        $("#label27").text('');
        subResetToolBar();
        SetReadOnly(true);
        var gridOptions = {
            height: 200
        };
        $("#dataGridView1").kendoGrid(gridOptions);
        $("#dataGridView2").kendoGrid(gridOptions);
        $("#dataGridView3").kendoGrid(gridOptions);
        $("#dataGridView4").kendoGrid(gridOptions);
        $("#dataGridView5").kendoGrid(gridOptions);
        $("#dataGridView6").kendoGrid(gridOptions);
        $("#dataGridView7").kendoGrid(gridOptions);
        $("#dataGridView8").kendoGrid(gridOptions);
        $("#dgvMaintenanceFee").kendoGrid(gridOptions);        

        $("#btnRefresh").click(function () {
            subRefresh();
        });
        $("#btnAdd").click(function () {
            subNew();
        });
        $("#btnEdit").click(function () {
            subUpdate();
        });
        $("#btnDelete").click(function () {
            subDelete();
        });
        $("#btnSave").click(function () {
            subSave();
        });
        $("#btnCancel").click(function () {
            subCancel();
        });
        $("#radioButton1").change(function () {
            $('#groupBox4').show();
            $('#groupBox5').hide();
        });
        $("#radioButton2").change(function () {
            $('#groupBox4').hide();
            $('#groupBox5').show();
        });
        $("#CurrencyName").change(function () {
            $("#label13").text($("#CurrencyCode").val());
            $("#label5").text($("#CurrencyCode").val());            
        }); 
        $("#checkBox1").change(function () {
            if ($("#checkBox1").prop('checked') == true) {
                if ($("#checkBox1").prop('disabled') == true) {
                    $("#cmpsrSearch6").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
                    $('#textBox12').prop('disabled', false);
                    $('#txtbDevidentPct').prop('disabled', false);
                }
            } else
            {
                $("#CalcDevCode").val('');
                $("#CalcDevName").val('');
                $("#CalcDevCode").prop('disabled', true);
                $("#CalcDevName").prop('disabled', true);
                $("#cmpsrSearch6").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');

                $('#txtbDevidentPct').val('');
                $('#txtbDevidentPct').prop('disabled', true);
            }
        }); 
        $("#txtbEffectiveDays").change(function () {
            var dateTimePicker4 = toDate($("#dateTimePicker4").val());
            var res = subCalcEffectiveDate(dateTimePicker4, $("#txtbEffectiveDays").val());
            res.success(function (data) { $("#dtpEfektif").val(data.dateEnd) });
        }); 
    });

    function subNew()
    {
        ResetForm();
        $('#radioButton1').prop('checked', true);
        SetReadOnly(false);
        isUpdate = false;
    }

    function subUpdate()
    {
        SetReadOnly(false);
        _intType = 2;
        isUpdate = true;
        subResetToolBar();
        $("#label27").text("UPDATE");
    }

    function subCancel()
    {
        ResetForm();
        SetReadOnly(true);
        _intType = 0;
        subResetToolBar();
        subRefresh();
    }

    function subRefresh()
    {
        ResetForm();
        SetReadOnly(true);
        $.ajax({
            type: 'GET',
            url: '/Master/RefreshProduct',
            data: { ProdId: $("#ProdId").val() },
            success: function (data) {
                if (data.blnResult) {
                    switch (data.dsResult.table[0].status)
                    {
                        case 0:
                            {
                                $("#label27").text("Status Produk : Belum Aktif");
                                break;
                            }
                        case 1:
                            {
                                $("#label27").text("Status Produk : Aktif");
                                break;
                            }
                        case 2:
                            {
                                $("#label27").text("Status Produk : Rejected");
                                break;
                            }
                    }

                    _intProdId = data.dsResult.table[0].prodId;
                    //$("#MoneyNAV").val(data.dsResult.table[0].nav);
                    $("#MoneyNAV").data("kendoNumericTextBox").value(data.dsResult.table[0].nav);
                    var MoneyNAV = $("#MoneyNAV").data("kendoNumericTextBox").value();
                    $("#textBox1").val($("#ProdCode").val());
                    $("#textBox2").val(data.dsResult.table[0].prodName);

                    $("#ManInvCode").val(data.dsResult.table[0].manInvCode);                    
                    ValidateManInv($("#ManInvCode").val(), function (output) {
                        $("#ManInvName").val(output);
                    });
                    $("#CustodyCode").val(data.dsResult.table[0].custodyCode);
                    ValidateCustody($("#CustodyCode").val(), function (output) {
                        $("#CustodyName").val(output);
                    });
                    $("#CurrencyCode").val(data.dsResult.table[0].prodCCY);
                    ValidateCurrency($("#CurrencyCode").val(), function (output) {
                        $("#CurrencyName").val(output);
                    });
                    $("#MIAccountId").val(data.dsResult.table[0].miAccountId);
                    $("#CTDAccountId").val(data.dsResult.table[0].ctdAccountId);

                    //$("#MoneyOPMaksUnit").val(data.dsResult.table[0].maxTotalUnit);
                    $("#MoneyOPMaksUnit").data("kendoNumericTextBox").value(data.dsResult.table[0].maxTotalUnit);
                    var MoneyOPMaksUnit = $("#MoneyOPMaksUnit").data("kendoNumericTextBox").value();
                    //$("#MoneyOPMaksNom").val(MoneyOPMaksUnit * MoneyNAV);
                    $("#MoneyOPMaksNom").data("kendoNumericTextBox").value(MoneyOPMaksUnit * MoneyNAV);

                    $("#textBox7").val(data.dsResult.table[0].maxDailyCust);
                    //$("#MoneyOPMaksPerNas").val(+$("#textBox7").val() * MoneyOPMaksUnit / 100);
                    $("#MoneyOPMaksPerNas").data("kendoNumericTextBox").value(+$("#textBox7").val() * MoneyOPMaksUnit / 100);
                    var dateTimePicker1 = new Date(data.dsResult.table[0].changeDate);
                    $("#dateTimePicker1").val(dateTimePicker1.getDate() + '/' + (dateTimePicker1.getMonth() + 1) + '/' + dateTimePicker1.getFullYear());
                    var dateTimePicker2 = new Date(data.dsResult.table[0].valueDate);
                    $("#dateTimePicker2").val(dateTimePicker2.getDate() + '/' + (dateTimePicker2.getMonth() + 1) + '/' + dateTimePicker2.getFullYear());
                    $("#textBox13").val(data.dsResult.table[0].subcFeeBased);
                    $("#textBox15").val(data.dsResult.table[0].redempFeeBased);
                    $("#textBox16").val(data.dsResult.table[0].maintenanceFee);

                    $("#TypeCode").val(data.dsResult.table[0].typeCode);
                    ValidateTypeReksa($("#TypeCode").val(), function (output) {
                        $("#TypeName").val(output);
                    });
                    $("#CalcDevCode").val(data.dsResult.table[0].calcCode);
                    ValidateCalcDev($("#CalcDevCode").val(), function (output) {
                        $("#CalcDevName").val(output);
                    });
                    $("#MoneyCEMinUnit").val(data.dsResult.table[0].minTotalUnit);
                    $("#MoneyCEaxUnit").val(data.dsResult.table[0].maxTotalUnit);

                    var dateTimePicker3 = new Date(data.dsResult.table[0].periodStart);
                    $("#dateTimePicker3").val(dateTimePicker3.getDate() + '/' + (dateTimePicker3.getMonth() + 1) + '/' + dateTimePicker3.getFullYear());
                    var dateTimePicker4 = new Date(data.dsResult.table[0].periodEnd);
                    $("#dateTimePicker4").val(dateTimePicker4.getDate() + '/' + (dateTimePicker4.getMonth() + 1) + '/' + dateTimePicker4.getFullYear());
                    var dateTimePicker5 = new Date(data.dsResult.table[0].matureDate);
                    $("#dateTimePicker5").val(dateTimePicker5.getDate() + '/' + (dateTimePicker5.getMonth() + 1) + '/' + dateTimePicker5.getFullYear());

                    $("#textBox3").val(data.dsResult.table[0].upFrontFee);
                    
                    var gridView5 = $("#dataGridView5").data("kendoGrid");
                    var gridView5data = populateGrid(data.dsResult.table9);
                    if (data.dsResult.table9.length > 0) {
                        gridView5.setOptions(gridView5data);
                        gridView5.setOptions({ toolbar: null });
                        gridView5.select("tr:eq(0)");
                    }
                    

                    $("#textBox4").val(data.dsResult.table[0].sellingFee);
                    $("#txtFundCode").val(data.dsResult.table[0].nfsFundCode);

                    if (data.dsResult.table[0].closeEndBit == "1") {
                        $("#radioButton1").prop('checked', false);
                        $("#radioButton2").prop('checked', true);
                    }
                    else {
                        $("#radioButton1").prop('checked', true);
                        $("#radioButton2").prop('checked', false);
                    }

                    if (data.dsResult.table[0].isDeviden == true) {
                        $("#checkBox1").prop('checked', true);
                        $("#textBox12").val(data.dsResult.table[0].devidenPeriod);
                        $("#txtbDevidentPct").val(data.dsResult.table[0].devidentPct);
                        $("#txtbEffectiveDays").val(data.dsResult.table[0].effectiveAfter);
                    }
                    var gridView1 = $("#dataGridView1").data("kendoGrid");
                    var gridView1data = populateGrid(data.dsResult.table3);
                    if (data.dsResult.table3.length > 0) {
                        gridView1.setOptions(gridView1data);
                        //if (_intType > 0) {
                        //    gridView1.setOptions({ toolbar: [{ name: "Create" }] });
                        //}
                        //else
                        //{
                        gridView1.setOptions({ toolbar: null });
                        gridView1.select("tr:eq(0)");
                        //}
                    }

                    var gridView2 = $("#dataGridView2").data("kendoGrid");
                    var gridView2data = populateGrid(data.dsResult.table4);
                    if (data.dsResult.table4.length > 0) {
                        gridView2.setOptions(gridView2data);
                        gridView2.setOptions({ toolbar: null });
                        gridView2.select("tr:eq(0)");
                    }

                    var gridView3 = $("#dataGridView3").data("kendoGrid");
                    var gridView3data = populateGrid(data.dsResult.table1);
                    if (data.dsResult.table1.length > 0) {
                        gridView3.setOptions(gridView3data);
                        gridView3.setOptions({ toolbar: null });
                        gridView3.select("tr:eq(0)");
                    }

                    var gridView4 = $("#dataGridView4").data("kendoGrid");
                    var gridView4data = populateGrid(data.dsResult.table2);
                    if (data.dsResult.table2.length > 0) {
                        gridView4.setOptions(gridView4data);
                        gridView4.setOptions({ toolbar: null });
                        gridView4.select("tr:eq(0)");
                    }

                    var gridView6 = $("#dataGridView6").data("kendoGrid");
                    var gridView6data = populateGrid(data.dsResult.table6);
                    if (data.dsResult.table6.length > 0) {
                        gridView6.setOptions(gridView6data);
                        gridView6.setOptions({ toolbar: null });
                        gridView6.select("tr:eq(0)");
                    }

                    var gridView7 = $("#dataGridView7").data("kendoGrid");
                    var gridView7data = populateGrid(data.dsResult.table7);
                    if (data.dsResult.table7.length > 0) {
                        gridView7.setOptions(gridView7data);
                        gridView7.setOptions({ toolbar: null });
                        gridView7.select("tr:eq(0)");
                    }

                    var gridView8 = $("#dataGridView8").data("kendoGrid");
                    var gridView8data = populateGrid(data.dsResult.table8);
                    if (data.dsResult.table8.length > 0) {
                        gridView8.setOptions(gridView8data);
                        gridView8.setOptions({ toolbar: null });
                        gridView8.select("tr:eq(0)");
                    }

                    var gridMaintenanceFee = $("#dgvMaintenanceFee").data("kendoGrid");
                    var gridMaintenanceFeedata = populateGrid(data.dsResult.table5);
                    if (data.dsResult.table5.length > 0) {
                        gridMaintenanceFee.setOptions(gridMaintenanceFeedata);
                        gridMaintenanceFee.setOptions({ toolbar: null });
                        gridMaintenanceFee.select("tr:eq(0)");
                    }
                    var dateTimePicker4 = toDate($("#dateTimePicker4").val());
                    var res = subCalcEffectiveDate(dateTimePicker4, $("#txtbEffectiveDays").val());
                    res.success(function (data) { $("#dtpEfektif").val(data.dateEnd) });

                    //dtpEfektif.Value = subCalcEffectiveDate(dateTimePicker4.Value, int.Parse(txtbEffectiveDays.Text));

                    _intType = 1;
                    subResetToolBar();
                }
                else
                {
                    swal("Warning", data.ErrMsg, "warning");
                }
            }
        });
    }

    function subSave()
    {
        var grid = $("#dgvMaintenanceFee").data("kendoGrid");
        grid.refresh();
        grid.tbody.find("tr[role='row']").each(function () {
            selectedId = selectedId + 1;
        })
        if (selectedId == 0) {
            swal("Warning", "Parameter Maintenance Fee Distribution wajib diisi", "warning");
            return;
        }

        var model = JSON.stringify({
            'intType': _intType,
            'intProdId': $("#srcCIF_text1").val(),
            'strProdCode': $("#srcCIF_text2").val(),
            'strProdName': $("#srcOffice_text1").val(),
            'strProdCCY': _intJnsNas,
            'intTypeId': $("#textShareHolderId").val(),
            'intManInvId': $("#tbTmptLahir").val(),
            'intCustodyId': dtpTglLahir,
            'decNAV': dtpJoinDate,
            'decMinTotalUnit': intStatus,
            'decMaxTotalUnit': NIKEmployee,
            'decMaxDailyUnit': $("#maskedRekening").val(),
            'decMaxDailyCust': $("#tbNamaRekening").val(),
            'dtPeriodStart': $("#cbProfilResiko").prop('checked'),
            'dtPeriodEnd': $("#cbKetum").prop('checked'),
            'dtMatureDate': dtpRiskProfile,
            'dtChangeDate': $("#tbNoNPWPKK").val(),
            'dtValueDate': $("#tbNamaNPWPKK").val(),
            'intCloseEndBit': $("#cbKepemilikanNPWPKK").val(),
            'isDeviden': $("#tbKepemilikanLainnya").val(),
            'intDevidenPeriod': dtpTglNPWPKK,
            'dtDevidenDate': $("#cbAlasanTanpaNPWP").val(),
            'intCalcId': $("#tbNoDokTanpaNPWP").val(),
            'dsNEmployeeSFee': dtpTglDokTanpaNPWP,
            'dsEmployeeSFee': $("#tbNoNPWPSendiri").val(),
            'decUpFrontFee': $("#tbNamaNPWPSendiri").val(),
            'decSubcFeeBased': NasabahId,
            'decRedempFeeBased': $("#maskedRekeningUSD").val(),
            'decMaintenanceFee': $("#tbNamaRekeningUSD").val(),
            'dsNEmployeeRFee': $("#maskedRekeningMC").val(),
            'dsEmployeeRFee': $("#tbNamaRekeningMC").val(),
            'strMIAccountId': SelectedId,
            'strCTDAccountId': arrHeader,
            'intNIK': 0,
            'strGUID': '',
            'dsMaintenanceFee': '',
            'decDevidentPct': '',
            'intEffectiveAfter': ''
        });



        $.ajax({
            type: "POST",
            data: model,
            url: '/Master/MaintainProduct',
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                if (data.blnResult == true) {
                    _intType = 0;
                    subResetToolBar();
                    swal("Success!", "Simpan Berhasil", "success");
                    subRefresh();
                }
                else {
                    swal("Warning", data.ErrMsg, "warning");
                }
            }
        });

    }

    function populateGrid(response) {        
        if (response.length > 0) {
            var columns = generateColumns(response);
            return gridOptions = {
                dataSource: {
                    transport: {
                        read: function (options) {
                            options.success(response);
                        }
                    },
                    pageSize: 5,
                    page: 1
                },
                editable: "popup",
                toolbar: ["create"],
                edit: function (e) {
                    if (!e.model.isNew()) {
                        // Disable the editor of the "id" column when editing data items
                        var numeric = e.container.find("input[name=fee]").data("kendoNumericTextBox");
                        numeric.enable(false);
                    }
                },
                columns: columns,
                selectable: true,
                height: 200
            };
        }
    }

    function generateColumns(response) {
        var columnNames = Object.keys(response[0]);
        return columnNames.map(function (name) {
            var fee = name.indexOf("fee") > -1 || name.indexOf("fee") > -1;
            var period = name.indexOf("period") > -1 || name.indexOf("period") > -1;
            var nominal = name.indexOf("nominal") > -1 || name.indexOf("nominal") > -1;
            var aumMin = name.indexOf("aumMin") > -1 || name.indexOf("aumMin") > -1;
            var aumMax = name.indexOf("aumMax") > -1 || name.indexOf("aumMax") > -1;
            var nispPct = name.indexOf("nispPct") > -1 || name.indexOf("nispPct") > -1;
            var fundMgrPct = name.indexOf("fundMgrPct") > -1 || name.indexOf("fundMgrPct") > -1;
            var maintFee = name.indexOf("maintFee") > -1 || name.indexOf("maintFee") > -1;
            var subscriptionFee = name.indexOf("subscriptionFee") > -1 || name.indexOf("subscriptionFee") > -1;
            var redemptFeeAsuransi = name.indexOf("redemptFeeAsuransi") > -1 || name.indexOf("redemptFeeAsuransi") > -1;
            var redemptFeeNonAsuransi = name.indexOf("redemptFeeNonAsuransi") > -1 || name.indexOf("redemptFeeNonAsuransi") > -1;
            
            return {
                field: name,
                width: maintFee ? 150 : fundMgrPct ? 150 : aumMax ? 120 : aumMin ? 80 : period ? 80 : fee ? 50 : 100,
                title: redemptFeeNonAsuransi ? "Redempt Fee Non Asuransi": redemptFeeAsuransi ? "Redempt Fee Asuransi": subscriptionFee ? "Subscription Fee": maintFee ? "Maintenance Fee": fundMgrPct ? "Fund Manager Pct" : nispPct ? "Percentage" : aumMax ? "AUM Max" : aumMin ? "AUM Min" : period ? "Period" : nominal? "Nominal": fee ? "Fee" : name
            };
        })
    }


    function SetReadOnly(status)
    {
        $("#radioButton1").prop('disabled', status);
        $("#radioButton2").prop('disabled', status);
        $("#checkBox1").prop('disabled', status);

        $("#TypeCode").prop('disabled', status); $("#TypeName").prop('disabled', status);
        $("#ManInvCode").prop('disabled', status); $("#ManInvName").prop('disabled', status);
        $("#CustodyCode").prop('disabled', status); $("#CustodyName").prop('disabled', status);
        $("#CurrencyCode").prop('disabled', status); $("#CurrencyName").prop('disabled', status);
        // 7 $("#checkBox1").prop('disabled', status); $("#checkBox1").prop('disabled', status);
        // 8 $("#checkBox1").prop('disabled', status); $("#checkBox1").prop('disabled', status);

        if (!status)
        {
            $("#cmpsrSearch2").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
            $("#cmpsrSearch3").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
            $("#cmpsrSearch4").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
            $("#cmpsrSearch5").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
            $("#cmpsrSearch7").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
            $("#cmpsrSearch8").attr('class', 'btn btn-default btn-sm btn-search-component src-cif enabled');
        }
        else
        {
            $("#cmpsrSearch2").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
            $("#cmpsrSearch3").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
            $("#cmpsrSearch4").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
            $("#cmpsrSearch5").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
            $("#cmpsrSearch7").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
            $("#cmpsrSearch8").attr('class', 'btn btn-default btn-sm btn-search-component src-cif disabled');
        }

        $("#textBox1").prop('disabled', status);
        $("#textBox2").prop('disabled', status);
        $("#textBox3").prop('disabled', status);
        $("#textBox4").prop('disabled', status);

        //$("#MoneyOPMaksUnit").prop('disabled', status);
        $("#MoneyOPMaksUnit").data("kendoNumericTextBox").enable(!status);
        //$("#MoneyOPMaksPerNas").prop('disabled', status);
        $("#MoneyOPMaksPerNas").data("kendoNumericTextBox").enable(!status);
        $("#textBox7").prop('disabled', status);

        //$("#MoneyNAV").prop('disabled', status);
        $("#MoneyNAV").data("kendoNumericTextBox").enable(!status);

        $("#dateTimePicker1").data("kendoDatePicker").enable(!status);
        $("#dateTimePicker2").data("kendoDatePicker").enable(!status);

        $("#textBox13").prop('disabled', status);
        $("#textBox15").prop('disabled', status);
        $("#textBox16").prop('disabled', status);
        $("#txtbDevidentPct").prop('disabled', status);
        $("#txtbEffectiveDays").prop('disabled', status);
        $("#MoneyCEMinUnit").prop('disabled', status);
        $("#MoneyCEMaxUnit").prop('disabled', status);

        $("#dateTimePicker3").data("kendoDatePicker").enable(!status);
        $("#dateTimePicker4").data("kendoDatePicker").enable(!status);
        $("#dateTimePicker5").data("kendoDatePicker").enable(!status);
        $("#dateTimePicker6").data("kendoDatePicker").enable(!status);

        //dataGridView1.Enabled = !status;
        //dataGridView2.Enabled = !status;
        //dataGridView3.Enabled = !status;
        //dataGridView4.Enabled = !status;

        //dgvMaintenanceFee.Enabled = !status;
        //dataGridView5.Enabled = !status;
        $("#txtFundCode").prop('disabled', status);
    }

    function ResetForm()
    {
        $("#label27").text("");
        $("#radioButton1").prop('checked', true);
        $("#radioButton2").prop('checked', false);
        $("#checkBox1").prop('checked', false);

        $("#ManInvCode").val(""); $("#ManInvName").val("");
        $("#CustodyCode").val(""); $("#CustodyName").val("");
        $("#CurrencyCode").val(""); $("#CurrencyName").val("");

        $("#CustodyCode").val(""); $("#CustodyName").val("");
        $("#ManInvCode").val(""); $("#ManInvName").val("");
        $("#CustodyCode").val(""); $("#CustodyName").val("");

        $("#textBox1").val("");
        $("#textBox2").val("");
        $("#textBox3").val("");
        $("#MoneyOPMaksUnit").data("kendoNumericTextBox").value(0);
        $("#MoneyOPMaksNom").data("kendoNumericTextBox").value(0);
        $("#textBox7").val("");
        $("#MoneyOPMaksPerNas").data("kendoNumericTextBox").value(0);
        //$("#MoneyNAV").val(0);
        $("#MoneyNAV").data("kendoNumericTextBox").value(0);

        var Today = new Date();
        $("#dateTimePicker1").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());
        $("#dateTimePicker2").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());

        $("#textBox12").val("");
        $("#textBox13").val("");
        $("#textBox15").val("");
        $("#textBox16").val("");
        $("#TypeCode").val(""); $("#TypeName").val("");
        $("#txtbDevidentPct").val("");
        $("#txtbEffectiveDays").val("1");

        $("#MoneyCEMaxUnit").val(0);
        $("#MoneyCEMinUnit").val(0);
        $("#dateTimePicker3").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());
        $("#dateTimePicker4").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());
        $("#dateTimePicker5").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());
        $("#dateTimePicker6").val(Today.getDate() + '/' + (Today.getMonth() + 1) + '/' + Today.getFullYear());
        
        //dataGridView1.DataSource = null;
        //dataGridView2.DataSource = null;
        //dataGridView3.DataSource = null;
        //dataGridView4.DataSource = null;

        //dgvMaintenanceFee.DataSource = null;

        //try {
        //    dataGridView1.Columns.Remove("Fee");
        //    dataGridView1.Columns.Remove("Period");
        //    dataGridView1.Columns.Remove("Nominal");
        //    dataGridView2.Columns.Remove("Fee");
        //    dataGridView2.Columns.Remove("Period");
        //    dataGridView2.Columns.Remove("Nominal");
        //    dataGridView3.Columns.Remove("Fee");
        //    dataGridView3.Columns.Remove("Nominal");
        //    dataGridView4.Columns.Remove("Fee");
        //    dataGridView4.Columns.Remove("Nominal");
        //    //20090525, oscar, REKSADN003, begin
        //    //parameter maintenance fee AUM
        //    dgvMaintenanceFee.Columns.Remove("AUMMin");
        //    dgvMaintenanceFee.Columns.Remove("AUMMax");
        //    dgvMaintenanceFee.Columns.Remove("NispPct");
        //    dgvMaintenanceFee.Columns.Remove("FundMgrPct");
        //    //20090525, oscar, REKSADN003, end
        //}
        //catch (Exception ex)
        //{
        //}
    }

    function subResetToolBar()
    {
        document.getElementById("btnRefresh").disabled = false;
        document.getElementById("btnAdd").disabled = false;
        document.getElementById("btnEdit").disabled = false;
        document.getElementById("btnDelete").disabled = false;
        document.getElementById("btnSave").disabled = true;
        document.getElementById("btnCancel").disabled = true;
    }
    
    function ValidateCalcDev(CalcCode, result) {
        if (CalcCode != '') {
            $.ajax({
                type: 'GET',
                url: '/Global/ValidateCalcDev',
                data: { Col1: CalcCode, Col2: '', Validate: 1 },
                success: function (data) {
                    if (data.length != 0) {
                        result(data[0].CalcName);
                    } else {
                        result('');
                    }
                }
            });
        }
        else {
            result('');
        }
    }

    function ValidateCurrency(CurrCode, result) {
        if (CurrCode != '') {
            $.ajax({
                type: 'GET',
                url: '/Global/ValidateCurrency',
                data: { Col1: CurrCode, Col2: '', Validate: 1 },
                success: function (data) {
                    if (data.length != 0) {
                        result(data[0].CurrencyName);
                    } else {
                        result('');
                    }
                }
            });
        }
        else
        {
            result('');
        }
    }

    function ValidateCustody(CustCode, result) {
        if (TypeCode != '') {
            $.ajax({
                type: 'GET',
                url: '/Global/ValidateCustody',
                data: { Col1: CustCode, Col2: '', Validate: 1 },
                success: function (data) {
                    if (data.length != 0) {
                        result(data[0].CustodyName);
                    } else {
                        result('');
                    }
                }
            });
        }
        else {
            result('');
        }
    }

    function ValidateManInv(ManInvCode, result) {
        if (TypeCode != '') {
            $.ajax({
                type: 'GET',
                url: '/Global/ValidateManInv',
                data: { Col1: ManInvCode, Col2: '', Validate: 1 },
                success: function (data) {
                    if (data.length != 0) {
                        result(data[0].ManInvName);
                    } else {
                        result('');
                    }
                }
            });
        }
        else {
            result('');
        }
    }

    function ValidateTypeReksa(TypeCode, result) {
        if (TypeCode != '') {
            $.ajax({
                type: 'GET',
                url: '/Global/ValidateTypeReksa',
                data: { Col1: TypeCode, Col2: '', Validate: 1 },
                success: function (data) {
                    if (data.length != 0) {
                        result(data[0].TypeName);
                    } else {
                        result('');
                    }
                }
            });
        }
        else {
            result('');
        }
    }

    function subCalcEffectiveDate(StartDate, NumDays)
    {
        return $.ajax({
            type: 'GET',
            url: '/Master/CalcEffectiveDate',
            data: { StartDate: StartDate, NumDays: NumDays }
        });
    }

    function toDate(dateStr) {
        var [day, month, year] = dateStr.split("/")
        return new Date(year, month - 1, day)
    }
</script>
